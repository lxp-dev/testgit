<?xml version="1.0" encoding="UTF-8"?>
<WorkBook xmlVersion="20120529" releaseVersion="7.0.0">
<TableDataMap>
<TableData name="ds1" class="com.fr.data.impl.DBTableData">
<Parameters/>
<Attributes maxMemRowCount="-1"/>
<Connection class="com.fr.data.impl.NameDatabaseConnection">
<DatabaseName>
<![CDATA[datasource]]></DatabaseName>
</Connection>
<Query>
<![CDATA[select 
*
from F_CompanyName
where F_CN_ID = '${logincompanyid}']]></Query>
</TableData>
<TableData name="ds2" class="com.fr.data.impl.DBTableData">
<Parameters>
<Parameter>
<Attributes name="bgnDate"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="endDate"/>
<O>
<![CDATA[]]></O>
</Parameter>
</Parameters>
<Attributes maxMemRowCount="-1"/>
<Connection class="com.fr.data.impl.NameDatabaseConnection">
<DatabaseName>
<![CDATA[datasource]]></DatabaseName>
</Connection>
<Query>
<![CDATA[select top 1 ('查询日期:' + '${bgnDate}' + ' ～ '+'${endDate}') as queryDate]]></Query>
</TableData>
<TableData name="ds3" class="com.fr.data.impl.DBTableData">
<Parameters>
<Parameter>
<Attributes name="supplierID"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="endDate"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="maxSphyj"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="minSphjp"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="maxCyljp"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="endretailamount"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgistealthclassyj"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgiothergoodsbigclass"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="minCylyj"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgiothergoodssmallclass"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgispecjj"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgnretailamount"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="maxCylyj"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="minSphlh"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgiismutiluminosityjp"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="minSphyj"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgiusetypeyj"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bandID"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgieyeglassmaterialtypejp"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgiframesizejj"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgnDate"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="maxSphjp"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="maxSphlh"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="goodsCategoryID"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="shopCode"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="minCyljp"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgirefractivejp"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="goodsID"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="goodsName"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgicolorjj"/>
<O>
<![CDATA[]]></O>
</Parameter>
</Parameters>
<Attributes maxMemRowCount="-1"/>
<Connection class="com.fr.data.impl.NameDatabaseConnection">
<DatabaseName>
<![CDATA[datasource]]></DatabaseName>
</Connection>
<Query>
<![CDATA[SELECT departmentID
INTO   #salesDepartments
FROM   Sales_createshopcodetab('${shopCode}')

--------------*********************************************------------------------------------
IF ( '${bgnDate}' < CONVERT(VARCHAR(10), Getdate(), 120) )
  BEGIN
      IF ( '${endDate}' < CONVERT(VARCHAR(10), Getdate(), 120) )
        BEGIN
            SELECT t1.CategoryID,
                   t1.GoodsCategoryName,
                   t1.SupplierID,
                   t1.brandid,
                   t1.goodsid,
                   t1.goodsname,
                   t1. ShopCode,
                   t1.ShopCodeName,
                   t1.xsNum,
                   t1.thNum,
                   t1.shNum,
                   t1.thje,
                   t1.xsje,
                   t1.shje,
                   t2.xsNum2,
                   t2.thNum2,
                   t2.shNum2,
                   t2.thje2,
                   t2.xsje2,
                   t2.shje2,
                   CASE
                     WHEN Isnull(t2.shje2, 0.00) = 0.00 THEN '0%'
                     ELSE CAST(CAST(t1.shje / t2.shje2 * 100 AS DECIMAL(18, 2)) AS VARCHAR(20)) + '%'
                   END                                            AS jezb,
                   CASE
                     WHEN Isnull(t2.bhsje2, 0.00) = 0.00 THEN '0%'
                     ELSE CAST(CAST(t1.bhsje / t2.bhsje2 * 100 AS DECIMAL(18, 2)) AS VARCHAR(20)) + '%'
                   END                                            AS cbzb,
                   CAST(Isnull(t1.bhsje, 0.00)AS DECIMAL(18, 2))  AS bhsje,
                   CAST(Isnull(t2.bhsje2, 0.00)AS DECIMAL(18, 2)) AS bhsje2,
                   t1.mlje,
                   t2.mlje2,
                   CASE
                     WHEN Isnull(t1.shje, 0.00) = 0.00 THEN '0%'
                     ELSE CAST(CAST(t1.mlje / t1.shje * 100 AS DECIMAL(18, 2)) AS VARCHAR(20)) + '%'
                   END                                            AS xsmll,
                   CASE
                     WHEN Isnull(t2.shje2, 0.00) = 0.00 THEN '0%'
                     ELSE CAST(CAST(t2.mlje2 / t2.shje2 * 100 AS DECIMAL(18, 2)) AS VARCHAR(20)) + '%'
                   END                                               AS xsmll2,
                   B_FM_Name                                         AS czname,
                   CASE
                     WHEN B_BD_Settlement = '1' THEN '现金'
                     WHEN B_BD_Settlement = '2' THEN '数期'
                     WHEN B_BD_Settlement = '3' THEN '代销月结'
                     WHEN B_BD_Settlement = '4' THEN '信用额周转'
                   END												 AS jstype,
                   t1.RetailPrice                                    AS RetailPrice,
				   stock_qc.GoodsQuantity							 as GoodsQuantityqc,
				   stock_qm.GoodsQuantity							 as GoodsQuantityqm,
				   stock_cg.GoodsQuantity							 as GoodsQuantitycg,
                   stock_th.GoodsQuantity							 as GoodsQuantityth,
				   stock_yk.GoodsQuantity							 as GoodsQuantityyk
            FROM   (SELECT CategoryID                                    AS CategoryID,
                           B_GC_GoodsCategoryName                        AS GoodsCategoryName,
                           SupplierID                                    AS SupplierID,
                           CategoryID + '.' + SupplierID + '.' + brandid AS goodsid,
                           brandid                                       AS brandid,
                           B_BD_brandName                                AS goodsname,
                           ShopCode,
                           B_DP_DepartmentName                           AS ShopCodeName,
                           SUM(xsNum)                                    AS xsNum,
                           SUM(thNum)                                    AS thNum,
                           SUM(xsNum) + SUM(thNum)                       AS shNum,
                           SUM(thje)                                     AS thje,
                           SUM(xsje)                                     AS xsje,
                           SUM(thje) + SUM(xsje)                         AS shje,
                           SUM(bhsje)                                    AS bhsje,
                           SUM(thje) + SUM(xsje) - SUM(bhsje)            AS mlje,
                           RetailPrice                                   AS RetailPrice
                    FROM   (SELECT R_SD_DSE_ShopCode                      AS ShopCode,
                                   R_RC_DSE_SupplierID                    AS SupplierID,
                                   R_RC_DSE_SupplierName                  AS SupplierName,
                                   Isnull(R_SD_DSE_GoodsNum, 0)           AS xsNum,
                                   0                                      AS thNum,
                                   0                                      AS thje,
                                   Isnull(R_SD_DSE_GoodsAmount, 0)        AS xsje,
                                   Isnull(R_SD_DSE_GoodsNotRateAmount, 0) AS bhsje,
                                   B_GI_ViewGoodsName                     AS goodsname,
                                   R_RC_DSE_GoodsID                       AS GoodsID,
                                   R_RC_DSE_BandID                        AS brandid,
                                   R_RC_DSE_BandName                      AS BrandName,
                                   R_RC_DSE_GoodsCategoryID               AS CategoryID,
                                   B_GI_RetailPrice                       AS RetailPrice
                            FROM   R_RC_DaySalesEntry
                                   LEFT JOIN B_GoodsInfo
                                     ON B_GI_GoodsID = R_RC_DSE_GoodsID
                            WHERE  R_SD_DSE_SalesType = '1'
                                   AND ( ( Isnull('${shopCode}', '') <> ''
                                           AND R_SD_DSE_ShopCode IN (SELECT departmentID
                                                                     FROM   #salesDepartments) )
                                          OR Isnull('${shopCode}', '') = '' )
                                   AND ( ( Isnull('${bgnDate}', '') <> ''
                                           AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) >= '${bgnDate}' )
                                          OR Isnull('${bgnDate}', '') = '' )
                                   AND ( ( Isnull('${endDate}', '') <> ''
                                           AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) <= '${endDate}' )
                                          OR Isnull('${endDate}', '') = '' )
                                   AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                           AND R_RC_DSE_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                          OR Isnull('${goodsCategoryID}', '') = '' )
                                   AND ( ( Isnull('${supplierID}', '') <> ''
                                           AND R_RC_DSE_SupplierID = Isnull('${supplierID}', '') )
                                          OR Isnull('${supplierID}', '') = '' )
                                   AND ( ( Isnull('${bandID}', '') <> ''
                                           AND R_RC_DSE_BandID = Isnull('${bandID}', '') )
                                          OR Isnull('${bandID}', '') = '' )
                                   AND ( ( Isnull('${goodsID}', '') <> ''
                                           AND R_RC_DSE_GoodsID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                          OR Isnull('${goodsID}', '') = '' )
                                   AND ( ( Isnull('${goodsName}', '') <> ''
                                           AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                          OR Isnull('${goodsName}', '') = '' )
                                   AND ( ( '${bgispecjj}' <> ''
                                           AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                          OR ( '${bgispecjj}' = '' ) ) --型号
                                   AND ( ( '${bgicolorjj}' <> ''
                                           AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                          OR ( '${bgicolorjj}' = '' ) ) --色号
                                   AND ( ( '${bgiframesizejj}' <> ''
                                           AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                          OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                   AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                           AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                          OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                   AND ( ( '${bgirefractivejp}' <> ''
                                           AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                          OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                   AND ( ( '${bgiismutiluminosityjp}' <> ''
                                           AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                          OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                   AND ( ( '${minSphjp}' <> ''
                                           AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                          OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                   AND ( ( '${maxSphjp}' <> ''
                                           AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                          OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                   AND ( ( '${minCyljp}' <> ''
                                           AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                          OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                   AND ( ( '${maxCyljp}' <> ''
                                           AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                          OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                   AND ( ( '${bgiusetypeyj}' <> ''
                                           AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                          OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                   AND ( ( '${bgistealthclassyj}' <> ''
                                           AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                          OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                   AND ( ( '${minSphyj}' <> ''
                                           AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                          OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                   AND ( ( '${maxSphyj}' <> ''
                                           AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                          OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                   AND ( ( '${minCylyj}' <> ''
                                           AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                          OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                   AND ( ( '${maxCylyj}' <> ''
                                           AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                          OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                   AND ( ( '${minSphlh}' <> ''
                                           AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                          OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                   AND ( ( '${maxSphlh}' <> ''
                                           AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                          OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                   AND ( ( '${bgiothergoodsbigclass}' <> ''
                                           AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                          OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                   AND ( ( '${bgiothergoodssmallclass}' <> ''
                                           AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                          OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                   AND ( ( '${bgnretailamount}' <> ''
                                           AND R_RC_DSE_RetailPrice >= CAST('${bgnretailamount}' AS FLOAT) )
                                          OR ( '${bgnretailamount}' = '' ) )
                                   AND ( ( '${endretailamount}' <> ''
                                           AND R_RC_DSE_RetailPrice <= CAST('${endretailamount}' AS FLOAT) )
                                          OR ( '${endretailamount}' = '' ) )
                            UNION ALL
                            SELECT R_SD_DSE_ShopCode                      AS ShopCode,
                                   R_RC_DSE_SupplierID                    AS SupplierID,
                                   R_RC_DSE_SupplierName                  AS SupplierName,
                                   0                                      AS xsNum,
                                   Isnull(R_SD_DSE_GoodsNum, 0)           AS thNum,
                                   Isnull(R_SD_DSE_GoodsAmount, 0)        AS thje,
                                   0                                      AS xsje,
                                   Isnull(R_SD_DSE_GoodsNotRateAmount, 0) AS bhsje,
                                   B_GI_ViewGoodsName                     AS goodsname,
                                   R_RC_DSE_GoodsID                       AS GoodsID,
                                   R_RC_DSE_BandID                        AS brandid,
                                   R_RC_DSE_BandName                      AS BrandName,
                                   R_RC_DSE_GoodsCategoryID               AS CategoryID,
                                   B_GI_RetailPrice                       AS RetailPrice
                            FROM   R_RC_DaySalesEntry
                                   LEFT JOIN B_GoodsInfo
                                     ON B_GI_GoodsID = R_RC_DSE_GoodsID
                            WHERE  R_SD_DSE_SalesType = '2'
                                   AND ( ( Isnull('${shopCode}', '') <> ''
                                           AND R_SD_DSE_ShopCode IN (SELECT departmentID
                                                                     FROM   #salesDepartments) )
                                          OR Isnull('${shopCode}', '') = '' )
                                   AND ( ( Isnull('${bgnDate}', '') <> ''
                                           AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) >= '${bgnDate}' )
                                          OR Isnull('${bgnDate}', '') = '' )
                                   AND ( ( Isnull('${endDate}', '') <> ''
                                           AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) <= '${endDate}' )
                                          OR Isnull('${endDate}', '') = '' )
                                   AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                           AND R_RC_DSE_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                          OR Isnull('${goodsCategoryID}', '') = '' )
                                   AND ( ( Isnull('${supplierID}', '') <> ''
                                           AND R_RC_DSE_SupplierID = Isnull('${supplierID}', '') )
                                          OR Isnull('${supplierID}', '') = '' )
                                   AND ( ( Isnull('${bandID}', '') <> ''
                                           AND R_RC_DSE_BandID = Isnull('${bandID}', '') )
                                          OR Isnull('${bandID}', '') = '' )
                                   AND ( ( Isnull('${goodsID}', '') <> ''
                                           AND R_RC_DSE_GoodsID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                          OR Isnull('${goodsID}', '') = '' )
                                   AND ( ( Isnull('${goodsName}', '') <> ''
                                           AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                          OR Isnull('${goodsName}', '') = '' )
                                   AND ( ( '${bgispecjj}' <> ''
                                           AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                          OR ( '${bgispecjj}' = '' ) ) --型号
                                   AND ( ( '${bgicolorjj}' <> ''
                                           AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                          OR ( '${bgicolorjj}' = '' ) ) --色号
                                   AND ( ( '${bgiframesizejj}' <> ''
                                           AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                          OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                   AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                           AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                          OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                   AND ( ( '${bgirefractivejp}' <> ''
                                           AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                          OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                   AND ( ( '${bgiismutiluminosityjp}' <> ''
                                           AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                          OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                   AND ( ( '${minSphjp}' <> ''
                                           AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                          OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                   AND ( ( '${maxSphjp}' <> ''
                                           AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                          OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                   AND ( ( '${minCyljp}' <> ''
                                           AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                          OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                   AND ( ( '${maxCyljp}' <> ''
                                           AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                          OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                   AND ( ( '${bgiusetypeyj}' <> ''
                                           AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                          OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                   AND ( ( '${bgistealthclassyj}' <> ''
                                           AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                          OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                   AND ( ( '${minSphyj}' <> ''
                                           AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                          OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                   AND ( ( '${maxSphyj}' <> ''
                                           AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                          OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                   AND ( ( '${minCylyj}' <> ''
                                           AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                          OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                   AND ( ( '${maxCylyj}' <> ''
                                           AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                          OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                   AND ( ( '${minSphlh}' <> ''
                                           AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                          OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                   AND ( ( '${maxSphlh}' <> ''
                                           AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                          OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                   AND ( ( '${bgiothergoodsbigclass}' <> ''
                                           AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                          OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                   AND ( ( '${bgiothergoodssmallclass}' <> ''
                                           AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                          OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                   AND ( ( '${bgnretailamount}' <> ''
                                           AND R_RC_DSE_RetailPrice >= CAST('${bgnretailamount}' AS FLOAT) )
                                          OR ( '${bgnretailamount}' = '' ) )
                                   AND ( ( '${endretailamount}' <> ''
                                           AND R_RC_DSE_RetailPrice <= CAST('${endretailamount}' AS FLOAT) )
                                          OR ( '${endretailamount}' = '' ) ))TEMP
                           LEFT JOIN B_Departments
                             ON B_DP_DepartmentID = ShopCode
                           LEFT JOIN B_GoodsCategory
                             ON CategoryID = B_GC_ID
                           LEFT JOIN B_Supplier
                             ON B_SP_ID = SupplierID
                           LEFT JOIN B_Brand
                             ON B_BD_SupplierID = SupplierID
                                AND B_BD_ID = brandid
                    GROUP  BY CategoryID,
                              B_GC_GoodsCategoryName,
                              ShopCode,
                              B_DP_DepartmentName,
                              SupplierID,
                              B_SP_SupplierName,
                              BrandID,
                              B_BD_brandName,
                              RetailPrice)t1
                   LEFT JOIN (SELECT CategoryID                                    AS CategoryID,
                                     B_GC_GoodsCategoryName                        AS GoodsCategoryName,
                                     SupplierID                                    AS SupplierID,
                                     brandid                                       AS brandid,
                                     CategoryID + '.' + SupplierID + '.' + brandid AS goodsid,
                                     B_BD_brandName                                AS goodsname,
                                     SUM(xsNum)                                    AS xsNum2,
                                     SUM(thNum)                                    AS thNum2,
                                     SUM(xsNum) + SUM(thNum)                       AS shNum2,
                                     SUM(thje)                                     AS thje2,
                                     SUM(xsje)                                     AS xsje2,
                                     SUM(thje) + SUM(xsje)                         AS shje2,
                                     SUM(bhsje)                                    AS bhsje2,
                                     SUM(thje) + SUM(xsje) - SUM(bhsje)            AS mlje2,
                                     RetailPrice                                   AS RetailPrice
                              FROM   (SELECT R_SD_DSE_ShopCode                      AS ShopCode,
                                             R_RC_DSE_SupplierID                    AS SupplierID,
                                             R_RC_DSE_SupplierName                  AS SupplierName,
                                             Isnull(R_SD_DSE_GoodsNum, 0)           AS xsNum,
                                             0                                      AS thNum,
                                             0                                      AS thje,
                                             Isnull(R_SD_DSE_GoodsAmount, 0)        AS xsje,
                                             Isnull(R_SD_DSE_GoodsNotRateAmount, 0) AS bhsje,
                                             B_GI_ViewGoodsName                     AS goodsname,
                                             R_RC_DSE_GoodsID                       AS GoodsID,
                                             R_RC_DSE_BandID                        AS brandid,
                                             R_RC_DSE_BandName                      AS BrandName,
                                             R_RC_DSE_GoodsCategoryID               AS CategoryID,
                                             B_GI_RetailPrice                       AS RetailPrice
                                      FROM   R_RC_DaySalesEntry
                                             LEFT JOIN B_GoodsInfo
                                               ON B_GI_GoodsID = R_RC_DSE_GoodsID
                                      WHERE  R_SD_DSE_SalesType = '1'
                                             AND ( ( Isnull('${shopCode}', '') <> ''
                                                     AND R_SD_DSE_ShopCode IN (SELECT departmentID
                                                                               FROM   #salesDepartments) )
                                                    OR Isnull('${shopCode}', '') = '' )
                                             AND ( ( Isnull('${bgnDate}', '') <> ''
                                                     AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) >= '${bgnDate}' )
                                                    OR Isnull('${bgnDate}', '') = '' )
                                             AND ( ( Isnull('${endDate}', '') <> ''
                                                     AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) <= '${endDate}' )
                                                    OR Isnull('${endDate}', '') = '' )
                                             AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                                     AND R_RC_DSE_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                                    OR Isnull('${goodsCategoryID}', '') = '' )
                                             AND ( ( Isnull('${supplierID}', '') <> ''
                                                     AND R_RC_DSE_SupplierID = Isnull('${supplierID}', '') )
                                                    OR Isnull('${supplierID}', '') = '' )
                                             AND ( ( Isnull('${bandID}', '') <> ''
                                                     AND R_RC_DSE_BandID = Isnull('${bandID}', '') )
                                                    OR Isnull('${bandID}', '') = '' )
                                             AND ( ( Isnull('${goodsID}', '') <> ''
                                                     AND R_RC_DSE_GoodsID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                                    OR Isnull('${goodsID}', '') = '' )
                                             AND ( ( Isnull('${goodsName}', '') <> ''
                                                     AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                                    OR Isnull('${goodsName}', '') = '' )
                                             AND ( ( '${bgispecjj}' <> ''
                                                     AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                                    OR ( '${bgispecjj}' = '' ) ) --型号
                                             AND ( ( '${bgicolorjj}' <> ''
                                                     AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                                    OR ( '${bgicolorjj}' = '' ) ) --色号
                                             AND ( ( '${bgiframesizejj}' <> ''
                                                     AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                                    OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                             AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                                     AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                                    OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                             AND ( ( '${bgirefractivejp}' <> ''
                                                     AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                                    OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                             AND ( ( '${bgiismutiluminosityjp}' <> ''
                                                     AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                                    OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                             AND ( ( '${minSphjp}' <> ''
                                                     AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                    OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                             AND ( ( '${maxSphjp}' <> ''
                                                     AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                    OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                             AND ( ( '${minCyljp}' <> ''
                                                     AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                    OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                             AND ( ( '${maxCyljp}' <> ''
                                                     AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                    OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                             AND ( ( '${bgiusetypeyj}' <> ''
                                                     AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                                    OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                             AND ( ( '${bgistealthclassyj}' <> ''
                                                     AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                                    OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                             AND ( ( '${minSphyj}' <> ''
                                                     AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                    OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                             AND ( ( '${maxSphyj}' <> ''
                                                     AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                    OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                             AND ( ( '${minCylyj}' <> ''
                                                     AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                    OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                             AND ( ( '${maxCylyj}' <> ''
                                                     AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                    OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                             AND ( ( '${minSphlh}' <> ''
                                                     AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                                    OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                             AND ( ( '${maxSphlh}' <> ''
                                                     AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                                    OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                             AND ( ( '${bgiothergoodsbigclass}' <> ''
                                                     AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                                    OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                             AND ( ( '${bgiothergoodssmallclass}' <> ''
                                                     AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                                    OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                             AND ( ( '${bgnretailamount}' <> ''
                                                     AND R_RC_DSE_RetailPrice >= CAST('${bgnretailamount}' AS FLOAT) )
                                                    OR ( '${bgnretailamount}' = '' ) )
                                             AND ( ( '${endretailamount}' <> ''
                                                     AND R_RC_DSE_RetailPrice <= CAST('${endretailamount}' AS FLOAT) )
                                                    OR ( '${endretailamount}' = '' ) )
                                      UNION ALL
                                      SELECT R_SD_DSE_ShopCode                      AS ShopCode,
                                             R_RC_DSE_SupplierID                    AS SupplierID,
                                             R_RC_DSE_SupplierName                  AS SupplierName,
                                             0                                      AS xsNum,
                                             Isnull(R_SD_DSE_GoodsNum, 0)           AS thNum,
                                             Isnull(R_SD_DSE_GoodsAmount, 0)        AS thje,
                                             0                                      AS xsje,
                                             Isnull(R_SD_DSE_GoodsNotRateAmount, 0) AS bhsje,
                                             B_GI_ViewGoodsName                     AS goodsname,
                                             R_RC_DSE_GoodsID                       AS GoodsID,
                                             R_RC_DSE_BandID                        AS brandid,
                                             R_RC_DSE_BandName                      AS BrandName,
                                             R_RC_DSE_GoodsCategoryID               AS CategoryID,
                                             B_GI_RetailPrice                       AS RetailPrice
                                      FROM   R_RC_DaySalesEntry
                                             LEFT JOIN B_GoodsInfo
                                               ON B_GI_GoodsID = R_RC_DSE_GoodsID
                                      WHERE  R_SD_DSE_SalesType = '2'
                                             AND ( ( Isnull('${shopCode}', '') <> ''
                                                     AND R_SD_DSE_ShopCode IN (SELECT departmentID
                                                                               FROM   #salesDepartments) )
                                                    OR Isnull('${shopCode}', '') = '' )
                                             AND ( ( Isnull('${bgnDate}', '') <> ''
                                                     AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) >= '${bgnDate}' )
                                                    OR Isnull('${bgnDate}', '') = '' )
                                             AND ( ( Isnull('${endDate}', '') <> ''
                                                     AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) <= '${endDate}' )
                                                    OR Isnull('${endDate}', '') = '' )
                                             AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                                     AND R_RC_DSE_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                                    OR Isnull('${goodsCategoryID}', '') = '' )
                                             AND ( ( Isnull('${supplierID}', '') <> ''
                                                     AND R_RC_DSE_SupplierID = Isnull('${supplierID}', '') )
                                                    OR Isnull('${supplierID}', '') = '' )
                                             AND ( ( Isnull('${bandID}', '') <> ''
                                                     AND R_RC_DSE_BandID = Isnull('${bandID}', '') )
                                                    OR Isnull('${bandID}', '') = '' )
                                             AND ( ( Isnull('${goodsID}', '') <> ''
                                                     AND R_RC_DSE_GoodsID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                                    OR Isnull('${goodsID}', '') = '' )
                                             AND ( ( Isnull('${goodsName}', '') <> ''
                                                     AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                                    OR Isnull('${goodsName}', '') = '' )
                                             AND ( ( '${bgispecjj}' <> ''
                                                     AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                                    OR ( '${bgispecjj}' = '' ) ) --型号
                                             AND ( ( '${bgicolorjj}' <> ''
                                                     AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                                    OR ( '${bgicolorjj}' = '' ) ) --色号
                                             AND ( ( '${bgiframesizejj}' <> ''
                                                     AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                                    OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                             AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                                     AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                                    OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                             AND ( ( '${bgirefractivejp}' <> ''
                                                     AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                                    OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                             AND ( ( '${bgiismutiluminosityjp}' <> ''
                                                     AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                                    OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                             AND ( ( '${minSphjp}' <> ''
                                                     AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                    OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                             AND ( ( '${maxSphjp}' <> ''
                                                     AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                    OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                             AND ( ( '${minCyljp}' <> ''
                                                     AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                    OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                             AND ( ( '${maxCyljp}' <> ''
                                                     AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                    OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                             AND ( ( '${bgiusetypeyj}' <> ''
                                                     AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                                    OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                             AND ( ( '${bgistealthclassyj}' <> ''
                                                     AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                                    OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                             AND ( ( '${minSphyj}' <> ''
                                                     AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                    OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                             AND ( ( '${maxSphyj}' <> ''
                                                     AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                    OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                             AND ( ( '${minCylyj}' <> ''
                                                     AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                    OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                             AND ( ( '${maxCylyj}' <> ''
                                                     AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                    OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                             AND ( ( '${minSphlh}' <> ''
                                                     AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                                    OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                             AND ( ( '${maxSphlh}' <> ''
                                                     AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                                    OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                             AND ( ( '${bgiothergoodsbigclass}' <> ''
                                                     AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                                    OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                             AND ( ( '${bgiothergoodssmallclass}' <> ''
                                                     AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                                    OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                             AND ( ( '${bgnretailamount}' <> ''
                                                     AND R_RC_DSE_RetailPrice >= CAST('${bgnretailamount}' AS FLOAT) )
                                                    OR ( '${bgnretailamount}' = '' ) )
                                             AND ( ( '${endretailamount}' <> ''
                                                     AND R_RC_DSE_RetailPrice <= CAST('${endretailamount}' AS FLOAT) )
                                                    OR ( '${endretailamount}' = '' ) ))TEMP
                                     LEFT JOIN B_GoodsCategory
                                       ON CategoryID = B_GC_ID
                                     LEFT JOIN B_Supplier
                                       ON B_SP_ID = SupplierID
                                     LEFT JOIN B_Brand
                                       ON B_BD_SupplierID = SupplierID
                                          AND B_BD_ID = brandid
                              GROUP  BY CategoryID,
                                        B_GC_GoodsCategoryName,
                                        SupplierID,
                                        B_SP_SupplierName,
                                        BrandID,
                                        B_BD_brandName,
                                        RetailPrice)t2
                     ON t1.SupplierID = t2.SupplierID
                        AND t1.CategoryID = t2.CategoryID
                        AND t1.brandid = t2.brandid
                        AND t1.goodsid = t2.goodsid
						AND t1.RetailPrice = t2.RetailPrice
                   LEFT JOIN B_Brand
                     ON B_BD_SupplierID = t1.SupplierID
                        AND B_BD_ID = t1.brandid
                   LEFT JOIN B_FrameMaterial
                     ON B_FM_ID = B_BD_FrameMaterialType
				   left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) < '${bgnDate}'
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_qc on t1.goodsid = stock_qc.GoodsID and stock_qc.deptID = t1.ShopCode and stock_qc.RetailPrice = t1.RetailPrice
					left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) <= '${endDate}'
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_qm on t1.goodsid = stock_qm.GoodsID and stock_qm.deptID = t1.ShopCode and stock_qm.RetailPrice = t1.RetailPrice
					left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) >= '${bgnDate}'
						  and convert(varchar(10),C_SH_SL_WarehousingDate,23) <= '${endDate}'
						  and (C_SH_SL_ChangeID like 'PIN%' or C_SH_SL_ChangeID like 'ALL%')
						  and C_SH_SL_GoodsQuantity > 0
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_cg on t1.goodsid = stock_cg.GoodsID and stock_cg.deptID = t1.ShopCode and stock_cg.RetailPrice = t1.RetailPrice
					left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						-sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) >= '${bgnDate}'
						  and convert(varchar(10),C_SH_SL_WarehousingDate,23) <= '${endDate}'
						  and (C_SH_SL_ChangeID like 'pout%' or C_SH_SL_ChangeID like 'ALL%')
						  and C_SH_SL_GoodsQuantity < 0
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_th on t1.goodsid = stock_th.GoodsID and stock_th.deptID = t1.ShopCode and stock_th.RetailPrice = t1.RetailPrice
					left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) >= '${bgnDate}'
						  and convert(varchar(10),C_SH_SL_WarehousingDate,23) <= '${endDate}'
						  and (C_SH_SL_ChangeID like 'sco%' or C_SH_SL_ChangeID like 'sci%')
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_yk on t1.goodsid = stock_yk.GoodsID and stock_yk.deptID = t1.ShopCode and stock_yk.RetailPrice = t1.RetailPrice
        
		END
      ELSE
        BEGIN
            SELECT t1.CategoryID,
                   t1.GoodsCategoryName,
                   t1.SupplierID,
                   t1.brandid,
                   t1.goodsid,
                   t1.goodsname,
                   t1. ShopCode,
                   t1.ShopCodeName,
                   t1.xsNum,
                   t1.thNum,
                   t1.shNum,
                   t1.thje,
                   t1.xsje,
                   t1.shje,
                   t2.xsNum2,
                   t2.thNum2,
                   t2.shNum2,
                   t2.thje2,
                   t2.xsje2,
                   t2.shje2,
                   CASE
                     WHEN Isnull(t2.shje2, 0.00) = 0.00 THEN '0%'
                     ELSE CAST(CAST(t1.shje / t2.shje2 * 100 AS DECIMAL(18, 2)) AS VARCHAR(20)) + '%'
                   END                                            AS jezb,
                   CASE
                     WHEN Isnull(t2.bhsje2, 0.00) = 0.00 THEN '0%'
                     ELSE CAST(CAST(t1.bhsje / t2.bhsje2 * 100 AS DECIMAL(18, 2)) AS VARCHAR(20)) + '%'
                   END                                            AS cbzb,
                   CAST(Isnull(t1.bhsje, 0.00)AS DECIMAL(18, 2))  AS bhsje,
                   CAST(Isnull(t2.bhsje2, 0.00)AS DECIMAL(18, 2)) AS bhsje2,
                   t1.mlje,
                   t2.mlje2,
                   CASE
                     WHEN Isnull(t1.shje, 0.00) = 0.00 THEN '0%'
                     ELSE CAST(CAST(t1.mlje / t1.shje * 100 AS DECIMAL(18, 2)) AS VARCHAR(20)) + '%'
                   END                                            AS xsmll,
                   CASE
                     WHEN Isnull(t2.shje2, 0.00) = 0.00 THEN '0%'
                     ELSE CAST(CAST(t2.mlje2 / t2.shje2 * 100 AS DECIMAL(18, 2)) AS VARCHAR(20)) + '%'
                   END                                            AS xsmll2,
                   B_FM_Name                                      AS czname,
                   CASE
                     WHEN B_BD_Settlement = '1' THEN '现金'
                     WHEN B_BD_Settlement = '2' THEN '数期'
                     WHEN B_BD_Settlement = '3' THEN '代销月结'
                     WHEN B_BD_Settlement = '4' THEN '信用额周转'
                   END                                            AS jstype,
                   t1.RetailPrice                                    AS RetailPrice,
				   stock_qc.GoodsQuantity							 as GoodsQuantityqc,
				   stock_qm.GoodsQuantity							 as GoodsQuantityqm,
				   stock_cg.GoodsQuantity							 as GoodsQuantitycg,
                   stock_th.GoodsQuantity							 as GoodsQuantityth,
				   stock_yk.GoodsQuantity							 as GoodsQuantityyk
            FROM   (SELECT CategoryID                                    AS CategoryID,
                           B_GC_GoodsCategoryName                        AS GoodsCategoryName,
                           SupplierID                                    AS SupplierID,
                           CategoryID + '.' + SupplierID + '.' + brandid AS goodsid,
                           brandid                                       AS brandid,
                           B_BD_brandName                                AS goodsname,
                           ShopCode,
                           B_DP_DepartmentName                           AS ShopCodeName,
                           SUM(xsNum)                                    AS xsNum,
                           SUM(thNum)                                    AS thNum,
                           SUM(xsNum) + SUM(thNum)                       AS shNum,
                           SUM(thje)                                     AS thje,
                           SUM(xsje)                                     AS xsje,
                           SUM(thje) + SUM(xsje)                         AS shje,
                           SUM(bhsje)                                    AS bhsje,
                           SUM(thje) + SUM(xsje) - SUM(bhsje)            AS mlje,
                           RetailPrice                                   AS RetailPrice
                    FROM   (SELECT CategoryID,
                                   ShopCode,
                                   SupplierID   AS SupplierID,
                                   SupplierName AS SupplierName,
                                   brandid      AS BrandID,
                                   BrandName    AS BrandName,
                                   GoodsID      AS goodsid,
                                   goodsname    AS goodsname,
                                   SUM(xsNum)   AS xsNum,
                                   SUM(thNum)   AS thNum,
                                   SUM(thje)    AS thje,
                                   SUM(xsje)    AS xsje,
                                   SUM(bhsje)   AS bhsje,
                                   RetailPrice  AS RetailPrice
                            FROM   (SELECT R_SD_DSE_ShopCode                      AS ShopCode,
                                           R_RC_DSE_GoodsCategoryID               AS CategoryID,
                                           R_RC_DSE_SupplierID                    AS SupplierID,
                                           R_RC_DSE_SupplierName                  AS SupplierName,
                                           R_RC_DSE_BandID                        AS brandid,
                                           R_RC_DSE_BandName                      AS BrandName,
                                           Isnull(R_SD_DSE_GoodsNum, 0)           AS xsNum,
                                           R_RC_DSE_GoodsID                       AS GoodsID,
                                           B_GI_ViewGoodsName                     AS goodsname,
                                           0                                      AS thNum,
                                           0                                      AS thje,
                                           Isnull(R_SD_DSE_GoodsAmount, 0)        AS xsje,
                                           Isnull(R_SD_DSE_GoodsNotRateAmount, 0) AS bhsje,
                                           B_GI_RetailPrice                       AS RetailPrice
                                    FROM   R_RC_DaySalesEntry
                                           LEFT JOIN B_GoodsInfo
                                             ON B_GI_GoodsID = R_RC_DSE_GoodsID
                                    WHERE  R_SD_DSE_SalesType = '1'
                                           AND ( ( Isnull('${shopCode}', '') <> ''
                                                   AND R_SD_DSE_ShopCode IN (SELECT departmentID
                                                                             FROM   #salesDepartments) )
                                                  OR Isnull('${shopCode}', '') = '' )
                                           AND ( ( Isnull('${bgnDate}', '') <> ''
                                                   AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) >= '${bgnDate}' )
                                                  OR Isnull('${bgnDate}', '') = '' )
                                           AND ( ( Isnull('${endDate}', '') <> ''
                                                   AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) <= CONVERT(CHAR(10), Dateadd(DAY, -1, '${endDate}'), 120) )
                                                  OR Isnull('${endDate}', '') = '' )
                                           AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                                   AND R_RC_DSE_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                                  OR Isnull('${goodsCategoryID}', '') = '' )
                                           AND ( ( Isnull('${supplierID}', '') <> ''
                                                   AND R_RC_DSE_SupplierID = Isnull('${supplierID}', '') )
                                                  OR Isnull('${supplierID}', '') = '' )
                                           AND ( ( Isnull('${bandID}', '') <> ''
                                                   AND R_RC_DSE_BandID = Isnull('${bandID}', '') )
                                                  OR Isnull('${bandID}', '') = '' )
                                           AND ( ( Isnull('${goodsID}', '') <> ''
                                                   AND R_RC_DSE_GoodsID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                                  OR Isnull('${goodsID}', '') = '' )
                                           AND ( ( Isnull('${goodsName}', '') <> ''
                                                   AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                                  OR Isnull('${goodsName}', '') = '' )
                                           AND ( ( '${bgispecjj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                                  OR ( '${bgispecjj}' = '' ) ) --型号
                                           AND ( ( '${bgicolorjj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                                  OR ( '${bgicolorjj}' = '' ) ) --色号
                                           AND ( ( '${bgiframesizejj}' <> ''
                                                   AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                                  OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                           AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                                   AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                                  OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                           AND ( ( '${bgirefractivejp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                                  OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                           AND ( ( '${bgiismutiluminosityjp}' <> ''
                                                   AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                                  OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                           AND ( ( '${minSphjp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                  OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                           AND ( ( '${maxSphjp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                  OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                           AND ( ( '${minCyljp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                  OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                           AND ( ( '${maxCyljp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                  OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                           AND ( ( '${bgiusetypeyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                                  OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                           AND ( ( '${bgistealthclassyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                                  OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                           AND ( ( '${minSphyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                  OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                           AND ( ( '${maxSphyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                  OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                           AND ( ( '${minCylyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                  OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                           AND ( ( '${maxCylyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                  OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                           AND ( ( '${minSphlh}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                                  OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                           AND ( ( '${maxSphlh}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                                  OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                           AND ( ( '${bgiothergoodsbigclass}' <> ''
                                                   AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                                  OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                           AND ( ( '${bgiothergoodssmallclass}' <> ''
                                                   AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                                  OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                           AND ( ( '${bgnretailamount}' <> ''
                                                   AND R_RC_DSE_RetailPrice >= CAST('${bgnretailamount}' AS FLOAT) )
                                                  OR ( '${bgnretailamount}' = '' ) )
                                           AND ( ( '${endretailamount}' <> ''
                                                   AND R_RC_DSE_RetailPrice <= CAST('${endretailamount}' AS FLOAT) )
                                                  OR ( '${endretailamount}' = '' ) )
                                    UNION ALL
                                    SELECT R_SD_DSE_ShopCode                      AS ShopCode,
                                           R_RC_DSE_GoodsCategoryID               AS CategoryID,
                                           R_RC_DSE_SupplierID                    AS SupplierID,
                                           R_RC_DSE_SupplierName                  AS SupplierName,
                                           R_RC_DSE_BandID                        AS brandid,
                                           R_RC_DSE_BandName                      AS BrandName,
                                           0                                      AS xsNum,
                                           R_RC_DSE_GoodsID                       AS GoodsID,
                                           B_GI_ViewGoodsName                     AS goodsname,
                                           Isnull(R_SD_DSE_GoodsNum, 0)           AS thNum,
                                           Isnull(R_SD_DSE_GoodsAmount, 0)        AS thje,
                                           0                                      AS xsje,
                                           Isnull(R_SD_DSE_GoodsNotRateAmount, 0) AS bhsje,
                                           B_GI_RetailPrice                       AS RetailPrice
                                    FROM   R_RC_DaySalesEntry
                                           LEFT JOIN B_GoodsInfo
                                             ON B_GI_GoodsID = R_RC_DSE_GoodsID
                                    WHERE  R_SD_DSE_SalesType = '2'
                                           AND ( ( Isnull('${shopCode}', '') <> ''
                                                   AND R_SD_DSE_ShopCode IN (SELECT departmentID
                                                                             FROM   #salesDepartments) )
                                                  OR Isnull('${shopCode}', '') = '' )
                                           AND ( ( Isnull('${bgnDate}', '') <> ''
                                                   AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) >= '${bgnDate}' )
                                                  OR Isnull('${bgnDate}', '') = '' )
                                           AND ( ( Isnull('${endDate}', '') <> ''
                                                   AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) <= CONVERT(CHAR(10), Dateadd(DAY, -1, '${endDate}'), 120) )
                                                  OR Isnull('${endDate}', '') = '' )
                                           AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                                   AND R_RC_DSE_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                                  OR Isnull('${goodsCategoryID}', '') = '' )
                                           AND ( ( Isnull('${supplierID}', '') <> ''
                                                   AND R_RC_DSE_SupplierID = Isnull('${supplierID}', '') )
                                                  OR Isnull('${supplierID}', '') = '' )
                                           AND ( ( Isnull('${bandID}', '') <> ''
                                                   AND R_RC_DSE_BandID = Isnull('${bandID}', '') )
                                                  OR Isnull('${bandID}', '') = '' )
                                           AND ( ( Isnull('${goodsID}', '') <> ''
                                                   AND R_RC_DSE_GoodsID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                                  OR Isnull('${goodsID}', '') = '' )
                                           AND ( ( Isnull('${goodsName}', '') <> ''
                                                   AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                                  OR Isnull('${goodsName}', '') = '' )
                                           AND ( ( '${bgispecjj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                                  OR ( '${bgispecjj}' = '' ) ) --型号
                                           AND ( ( '${bgicolorjj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                                  OR ( '${bgicolorjj}' = '' ) ) --色号
                                           AND ( ( '${bgiframesizejj}' <> ''
                                                   AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                                  OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                           AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                                   AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                                  OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                           AND ( ( '${bgirefractivejp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                                  OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                           AND ( ( '${bgiismutiluminosityjp}' <> ''
                                                   AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                                  OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                           AND ( ( '${minSphjp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                  OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                           AND ( ( '${maxSphjp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                  OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                           AND ( ( '${minCyljp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                  OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                           AND ( ( '${maxCyljp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                  OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                           AND ( ( '${bgiusetypeyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                                  OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                           AND ( ( '${bgistealthclassyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                                  OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                           AND ( ( '${minSphyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                  OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                           AND ( ( '${maxSphyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                  OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                           AND ( ( '${minCylyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                  OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                           AND ( ( '${maxCylyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                  OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                           AND ( ( '${minSphlh}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                                  OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                           AND ( ( '${maxSphlh}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                                  OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                           AND ( ( '${bgiothergoodsbigclass}' <> ''
                                                   AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                                  OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                           AND ( ( '${bgiothergoodssmallclass}' <> ''
                                                   AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                                  OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                           AND ( ( '${bgnretailamount}' <> ''
                                                   AND R_RC_DSE_RetailPrice >= CAST('${bgnretailamount}' AS FLOAT) )
                                                  OR ( '${bgnretailamount}' = '' ) )
                                           AND ( ( '${endretailamount}' <> ''
                                                   AND R_RC_DSE_RetailPrice <= CAST('${endretailamount}' AS FLOAT) )
                                                  OR ( '${endretailamount}' = '' ) ))TEMP
                            GROUP  BY CategoryID,
                                      ShopCode,
                                      SupplierID,
                                      SupplierName,
                                      brandid,
                                      BrandName,
                                      GoodsID,
                                      goodsname,
                                      RetailPrice
                            UNION ALL
                            SELECT CategoryID,
                                   ShopCode,
                                   SupplierID   AS SupplierID,
                                   SupplierName AS SupplierName,
                                   brandid      AS brandid,
                                   brandName    AS brandName,
                                   GoodsID      AS goodsid,
                                   goodsname    AS goodsname,
                                   SUM(xsNum)   AS xsNum,
                                   SUM(thNum)   AS thNum,
                                   SUM(thje)    AS thje,
                                   SUM(xsje)    AS xsje,
                                   SUM(bhsje)   AS bhsje,
                                   RetailPrice  AS RetailPrice
                            FROM   (SELECT S_SE_SB_ShopCode                                              AS ShopCode,
                                           S_SE_SD_CommoditiesFlag                                       AS CategoryID,
                                           B_SP_ID                                                       AS SupplierID,
                                           B_SP_SupplierName                                             AS SupplierName,
                                           B_BD_ID                                                       AS brandid,
                                           B_BD_brandName                                                AS brandName,
                                           S_SE_SD_SalesItemID                                           AS GoodsID,
                                           B_GI_ViewGoodsName                                            AS goodsname,
                                           Isnull(SUM(Isnull(S_SE_SD_Number, 0)), 0)                     AS xsNum,
                                           0                                                             AS thNum,
                                           0                                                             AS thje,
                                           Isnull(SUM(Isnull(S_SE_SD_SalesValue, 0)), 0)                 AS xsje,
                                           Isnull(SUM(Isnull(S_SE_SD_UnitPrice * S_SE_SD_Number, 0)), 0) AS bhsje,
                                           B_GI_RetailPrice                                              AS RetailPrice
                                    FROM   S_SE_SalesBasic
                                           INNER JOIN S_SE_SalesDetail
                                             ON S_SE_SB_SalesID = S_SE_SD_SalesID
                                           LEFT JOIN B_GoodsInfo
                                             ON S_SE_SD_SalesItemID = B_GI_GoodsID
                                           LEFT JOIN B_Brand
                                             ON B_BD_ID = B_GI_BrandID
                                                AND B_GI_SupplierID = B_BD_SupplierID
                                           LEFT JOIN B_Supplier
                                             ON B_GI_SupplierID = B_SP_ID
                                    WHERE  S_SE_SB_ValueFlag = '1'
                                           AND ( ( Isnull('${shopCode}', '') <> ''
                                                   AND S_SE_SB_ShopCode IN (SELECT departmentID
                                                                            FROM   #salesDepartments) )
                                                  OR Isnull('${shopCode}', '') = '' )
                                           AND ( ( Isnull('${bgnDate}', '') <> ''
                                                   AND CONVERT(VARCHAR(10), S_SE_SB_PosDatetime, 120) >= CONVERT(VARCHAR(10), Getdate(), 23) )
                                                  OR Isnull('${bgnDate}', '') = '' )
                                           AND ( ( Isnull('${endDate}', '') <> ''
                                                   AND CONVERT(VARCHAR(10), S_SE_SB_PosDatetime, 120) <= CONVERT(VARCHAR(10), Getdate(), 23) )
                                                  OR Isnull('${endDate}', '') = '' )
                                           AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                                   AND B_GI_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                                  OR Isnull('${goodsCategoryID}', '') = '' )
                                           AND ( ( Isnull('${supplierID}', '') <> ''
                                                   AND B_GI_SupplierID = Isnull('${supplierID}', '') )
                                                  OR Isnull('${supplierID}', '') = '' )
                                           AND ( ( Isnull('${bandID}', '') <> ''
                                                   AND B_GI_BrandID = Isnull('${bandID}', '') )
                                                  OR Isnull('${bandID}', '') = '' )
                                           AND ( ( Isnull('${goodsID}', '') <> ''
                                                   AND S_SE_SD_SalesItemID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                                  OR Isnull('${goodsID}', '') = '' )
                                           AND ( ( Isnull('${goodsName}', '') <> ''
                                                   AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                                  OR Isnull('${goodsName}', '') = '' )
                                           AND ( ( '${bgispecjj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                                  OR ( '${bgispecjj}' = '' ) ) --型号
                                           AND ( ( '${bgicolorjj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                                  OR ( '${bgicolorjj}' = '' ) ) --色号
                                           AND ( ( '${bgiframesizejj}' <> ''
                                                   AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                                  OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                           AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                                   AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                                  OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                           AND ( ( '${bgirefractivejp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                                  OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                           AND ( ( '${bgiismutiluminosityjp}' <> ''
                                                   AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                                  OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                           AND ( ( '${minSphjp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                  OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                           AND ( ( '${maxSphjp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                  OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                           AND ( ( '${minCyljp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                  OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                           AND ( ( '${maxCyljp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                  OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                           AND ( ( '${bgiusetypeyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                                  OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                           AND ( ( '${bgistealthclassyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                                  OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                           AND ( ( '${minSphyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                  OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                           AND ( ( '${maxSphyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                  OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                           AND ( ( '${minCylyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                  OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                           AND ( ( '${maxCylyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                  OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                           AND ( ( '${minSphlh}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                                  OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                           AND ( ( '${maxSphlh}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                                  OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                           AND ( ( '${bgiothergoodsbigclass}' <> ''
                                                   AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                                  OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                           AND ( ( '${bgiothergoodssmallclass}' <> ''
                                                   AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                                  OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                           AND ( ( '${bgnretailamount}' <> ''
                                                   AND S_SE_SD_Sprice >= CAST('${bgnretailamount}' AS FLOAT) )
                                                  OR ( '${bgnretailamount}' = '' ) )
                                           AND ( ( '${endretailamount}' <> ''
                                                   AND S_SE_SD_Sprice <= CAST('${endretailamount}' AS FLOAT) )
                                                  OR ( '${endretailamount}' = '' ) )
                                    GROUP  BY S_SE_SD_SalesItemID,
                                              B_GI_ViewGoodsName,
                                              B_BD_ID,
                                              S_SE_SD_CommoditiesFlag,
                                              S_SE_SB_ShopCode,
                                              B_SP_ID,
                                              B_SP_SupplierName,
                                              B_BD_brandName,
                                              B_GI_RetailPrice
                                    UNION ALL
                                    SELECT S_SE_SB_ShopCode                                               AS ShopCode,
                                           S_SE_SD_CommoditiesFlag                                        AS CategoryID,
                                           B_SP_ID                                                        AS SupplierID,
                                           B_SP_SupplierName                                              AS SupplierName,
                                           B_BD_ID                                                        AS brandid,
                                           B_BD_brandName                                                 AS brandName,
                                           S_SE_SD_SalesItemID                                            AS GoodsID,
                                           B_GI_ViewGoodsName                                             AS goodsname,
                                           0                                                              AS xsNum,
                                           -Isnull(SUM(Isnull(S_SE_SD_Number, 0)), 0)                     AS thNum,
                                           -Isnull(SUM(Isnull(S_SE_SD_SalesValue, 0)), 0)                 AS thje,
                                           0                                                              AS xsje,
                                           -Isnull(SUM(Isnull(S_SE_SD_UnitPrice * S_SE_SD_Number, 0)), 0) AS bhsje,
                                           B_GI_RetailPrice                                               AS RetailPrice
                                    FROM   S_SE_SalesBasic
                                           INNER JOIN S_SE_SalesDetail
                                             ON S_SE_SB_SalesID = S_SE_SD_SalesID
                                           LEFT JOIN B_GoodsInfo
                                             ON S_SE_SD_SalesItemID = B_GI_GoodsID
                                           LEFT JOIN B_Brand
                                             ON B_BD_ID = B_GI_BrandID
                                                AND B_GI_SupplierID = B_BD_SupplierID
                                           LEFT JOIN B_Supplier
                                             ON B_GI_SupplierID = B_SP_ID
                                    WHERE  S_SE_SB_ValueFlag = '1'
                                           AND S_SE_SB_WithdrawFlag = '1'
                                           AND ( ( Isnull('${shopCode}', '') <> ''
                                                   AND S_SE_SB_ShopCode IN (SELECT departmentID
                                                                            FROM   #salesDepartments) )
                                                  OR Isnull('${shopCode}', '') = '' )
                                           AND ( ( Isnull('${bgnDate}', '') <> ''
                                                   AND CONVERT(VARCHAR(10), S_SE_SB_WithdrawDate, 120) >= CONVERT(VARCHAR(10), Getdate(), 23) )
                                                  OR Isnull('${bgnDate}', '') = '' )
                                           AND ( ( Isnull('${endDate}', '') <> ''
                                                   AND CONVERT(VARCHAR(10), S_SE_SB_WithdrawDate, 120) <= CONVERT(VARCHAR(10), Getdate(), 23) )
                                                  OR Isnull('${endDate}', '') = '' )
                                           AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                                   AND B_GI_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                                  OR Isnull('${goodsCategoryID}', '') = '' )
                                           AND ( ( Isnull('${supplierID}', '') <> ''
                                                   AND B_GI_SupplierID = Isnull('${supplierID}', '') )
                                                  OR Isnull('${supplierID}', '') = '' )
                                           AND ( ( Isnull('${bandID}', '') <> ''
                                                   AND B_GI_BrandID = Isnull('${bandID}', '') )
                                                  OR Isnull('${bandID}', '') = '' )
                                           AND ( ( Isnull('${goodsID}', '') <> ''
                                                   AND S_SE_SD_SalesItemID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                                  OR Isnull('${goodsID}', '') = '' )
                                           AND ( ( Isnull('${goodsName}', '') <> ''
                                                   AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                                  OR Isnull('${goodsName}', '') = '' )
                                           AND ( ( '${bgispecjj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                                  OR ( '${bgispecjj}' = '' ) ) --型号
                                           AND ( ( '${bgicolorjj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                                  OR ( '${bgicolorjj}' = '' ) ) --色号
                                           AND ( ( '${bgiframesizejj}' <> ''
                                                   AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                                  OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                           AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                                   AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                                  OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                           AND ( ( '${bgirefractivejp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                                  OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                           AND ( ( '${bgiismutiluminosityjp}' <> ''
                                                   AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                                  OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                           AND ( ( '${minSphjp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                  OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                           AND ( ( '${maxSphjp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                  OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                           AND ( ( '${minCyljp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                  OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                           AND ( ( '${maxCyljp}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                  OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                           AND ( ( '${bgiusetypeyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                                  OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                           AND ( ( '${bgistealthclassyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                                  OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                           AND ( ( '${minSphyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                  OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                           AND ( ( '${maxSphyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                  OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                           AND ( ( '${minCylyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                  OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                           AND ( ( '${maxCylyj}' <> ''
                                                   AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                  OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                           AND ( ( '${minSphlh}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                                  OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                           AND ( ( '${maxSphlh}' <> ''
                                                   AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                                  OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                           AND ( ( '${bgiothergoodsbigclass}' <> ''
                                                   AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                                  OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                           AND ( ( '${bgiothergoodssmallclass}' <> ''
                                                   AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                                  OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                           AND ( ( '${bgnretailamount}' <> ''
                                                   AND S_SE_SD_Sprice >= CAST('${bgnretailamount}' AS FLOAT) )
                                                  OR ( '${bgnretailamount}' = '' ) )
                                           AND ( ( '${endretailamount}' <> ''
                                                   AND S_SE_SD_Sprice <= CAST('${endretailamount}' AS FLOAT) )
                                                  OR ( '${endretailamount}' = '' ) )
                                    GROUP  BY S_SE_SD_SalesItemID,
                                              B_GI_ViewGoodsName,
                                              B_BD_ID,
                                              S_SE_SD_CommoditiesFlag,
                                              S_SE_SB_ShopCode,
                                              B_SP_ID,
                                              B_SP_SupplierName,
                                              B_BD_brandName,
                                              B_GI_RetailPrice)TEMP
                            GROUP  BY CategoryID,
                                      ShopCode,
                                      SupplierID,
                                      SupplierName,
                                      brandid,
                                      brandName,
                                      goodsid,
                                      goodsname,
                                      RetailPrice)TEMP
                           LEFT JOIN B_Departments
                             ON B_DP_DepartmentID = ShopCode
                           LEFT JOIN B_GoodsCategory
                             ON CategoryID = B_GC_ID
                           LEFT JOIN B_Supplier
                             ON B_SP_ID = SupplierID
                           LEFT JOIN B_Brand
                             ON B_BD_SupplierID = SupplierID
                                AND B_BD_ID = brandid
                    GROUP  BY CategoryID,
                              B_GC_GoodsCategoryName,
                              ShopCode,
                              B_DP_DepartmentName,
                              SupplierID,
                              B_SP_SupplierName,
                              BrandID,
                              B_BD_brandName,
                              RetailPrice)t1
                   LEFT JOIN(SELECT CategoryID                                    AS CategoryID,
                                    B_GC_GoodsCategoryName                        AS GoodsCategoryName,
                                    SupplierID                                    AS SupplierID,
                                    brandid                                       AS brandid,
                                    CategoryID + '.' + SupplierID + '.' + brandid AS goodsid,
                                    B_BD_brandName                                AS goodsname,
                                    SUM(xsNum)                                    AS xsNum2,
                                    SUM(thNum)                                    AS thNum2,
                                    SUM(xsNum) + SUM(thNum)                       AS shNum2,
                                    SUM(thje)                                     AS thje2,
                                    SUM(xsje)                                     AS xsje2,
                                    SUM(thje) + SUM(xsje)                         AS shje2,
                                    SUM(bhsje)                                    AS bhsje2,
                                    SUM(thje) + SUM(xsje) - SUM(bhsje)            AS mlje2,
                                    RetailPrice                                   AS RetailPrice
                             FROM   (SELECT CategoryID,
                                            ShopCode,
                                            SupplierID   AS SupplierID,
                                            SupplierName AS SupplierName,
                                            brandid      AS BrandID,
                                            BrandName    AS BrandName,
                                            GoodsID      AS goodsid,
                                            goodsname    AS goodsname,
                                            SUM(xsNum)   AS xsNum,
                                            SUM(thNum)   AS thNum,
                                            SUM(thje)    AS thje,
                                            SUM(xsje)    AS xsje,
                                            SUM(bhsje)   AS bhsje,
                                            RetailPrice  AS RetailPrice
                                     FROM   (SELECT R_SD_DSE_ShopCode                      AS ShopCode,
                                                    R_RC_DSE_GoodsCategoryID               AS CategoryID,
                                                    R_RC_DSE_SupplierID                    AS SupplierID,
                                                    R_RC_DSE_SupplierName                  AS SupplierName,
                                                    R_RC_DSE_BandID                        AS brandid,
                                                    R_RC_DSE_BandName                      AS BrandName,
                                                    Isnull(R_SD_DSE_GoodsNum, 0)           AS xsNum,
                                                    R_RC_DSE_GoodsID                       AS GoodsID,
                                                    B_GI_ViewGoodsName                     AS goodsname,
                                                    0                                      AS thNum,
                                                    0                                      AS thje,
                                                    Isnull(R_SD_DSE_GoodsAmount, 0)        AS xsje,
                                                    Isnull(R_SD_DSE_GoodsNotRateAmount, 0) AS bhsje,
                                                    B_GI_RetailPrice                       AS RetailPrice
                                             FROM   R_RC_DaySalesEntry
                                                    LEFT JOIN B_GoodsInfo
                                                      ON B_GI_GoodsID = R_RC_DSE_GoodsID
                                             WHERE  R_SD_DSE_SalesType = '1'
                                                    AND ( ( Isnull('${shopCode}', '') <> ''
                                                            AND R_SD_DSE_ShopCode IN (SELECT departmentID
                                                                                      FROM   #salesDepartments) )
                                                           OR Isnull('${shopCode}', '') = '' )
                                                    AND ( ( Isnull('${bgnDate}', '') <> ''
                                                            AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) >= '${bgnDate}' )
                                                           OR Isnull('${bgnDate}', '') = '' )
                                                    AND ( ( Isnull('${endDate}', '') <> ''
                                                            AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) <= CONVERT(CHAR(10), Dateadd(DAY, -1, '${endDate}'), 120) )
                                                           OR Isnull('${endDate}', '') = '' )
                                                    AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                                            AND R_RC_DSE_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                                           OR Isnull('${goodsCategoryID}', '') = '' )
                                                    AND ( ( Isnull('${supplierID}', '') <> ''
                                                            AND R_RC_DSE_SupplierID = Isnull('${supplierID}', '') )
                                                           OR Isnull('${supplierID}', '') = '' )
                                                    AND ( ( Isnull('${bandID}', '') <> ''
                                                            AND R_RC_DSE_BandID = Isnull('${bandID}', '') )
                                                           OR Isnull('${bandID}', '') = '' )
                                                    AND ( ( Isnull('${goodsID}', '') <> ''
                                                            AND R_RC_DSE_GoodsID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                                           OR Isnull('${goodsID}', '') = '' )
                                                    AND ( ( Isnull('${goodsName}', '') <> ''
                                                            AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                                           OR Isnull('${goodsName}', '') = '' )
                                                    AND ( ( '${bgispecjj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                                           OR ( '${bgispecjj}' = '' ) ) --型号
                                                    AND ( ( '${bgicolorjj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                                           OR ( '${bgicolorjj}' = '' ) ) --色号
                                                    AND ( ( '${bgiframesizejj}' <> ''
                                                            AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                                           OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                                    AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                                            AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                                           OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                                    AND ( ( '${bgirefractivejp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                                           OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                                    AND ( ( '${bgiismutiluminosityjp}' <> ''
                                                            AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                                           OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                                    AND ( ( '${minSphjp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                           OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                                    AND ( ( '${maxSphjp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                           OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                                    AND ( ( '${minCyljp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                           OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                                    AND ( ( '${maxCyljp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                           OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                                    AND ( ( '${bgiusetypeyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                                           OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                                    AND ( ( '${bgistealthclassyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                                           OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                                    AND ( ( '${minSphyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                           OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                                    AND ( ( '${maxSphyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                           OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                                    AND ( ( '${minCylyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                           OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                                    AND ( ( '${maxCylyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                           OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                                    AND ( ( '${minSphlh}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                                           OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                                    AND ( ( '${maxSphlh}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                                           OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                                    AND ( ( '${bgiothergoodsbigclass}' <> ''
                                                            AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                                           OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                                    AND ( ( '${bgiothergoodssmallclass}' <> ''
                                                            AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                                           OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                                    AND ( ( '${bgnretailamount}' <> ''
                                                            AND R_RC_DSE_RetailPrice >= CAST('${bgnretailamount}' AS FLOAT) )
                                                           OR ( '${bgnretailamount}' = '' ) )
                                                    AND ( ( '${endretailamount}' <> ''
                                                            AND R_RC_DSE_RetailPrice <= CAST('${endretailamount}' AS FLOAT) )
                                                           OR ( '${endretailamount}' = '' ) )
                                             UNION ALL
                                             SELECT R_SD_DSE_ShopCode                      AS ShopCode,
                                                    R_RC_DSE_GoodsCategoryID               AS CategoryID,
                                                    R_RC_DSE_SupplierID                    AS SupplierID,
                                                    R_RC_DSE_SupplierName                  AS SupplierName,
                                                    R_RC_DSE_BandID                        AS brandid,
                                                    R_RC_DSE_BandName                      AS BrandName,
                                                    0                                      AS xsNum,
                                                    R_RC_DSE_GoodsID                       AS GoodsID,
                                                    B_GI_ViewGoodsName                     AS goodsname,
                                                    Isnull(R_SD_DSE_GoodsNum, 0)           AS thNum,
                                                    Isnull(R_SD_DSE_GoodsAmount, 0)        AS thje,
                                                    0                                      AS xsje,
                                                    Isnull(R_SD_DSE_GoodsNotRateAmount, 0) AS bhsje,
                                                    B_GI_RetailPrice                       AS RetailPrice
                                             FROM   R_RC_DaySalesEntry
                                                    LEFT JOIN B_GoodsInfo
                                                      ON B_GI_GoodsID = R_RC_DSE_GoodsID
                                             WHERE  R_SD_DSE_SalesType = '2'
                                                    AND ( ( Isnull('${shopCode}', '') <> ''
                                                            AND R_SD_DSE_ShopCode IN (SELECT departmentID
                                                                                      FROM   #salesDepartments) )
                                                           OR Isnull('${shopCode}', '') = '' )
                                                    AND ( ( Isnull('${bgnDate}', '') <> ''
                                                            AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) >= '${bgnDate}' )
                                                           OR Isnull('${bgnDate}', '') = '' )
                                                    AND ( ( Isnull('${endDate}', '') <> ''
                                                            AND CONVERT(VARCHAR(10), R_SD_DSE_Date, 120) <= CONVERT(CHAR(10), Dateadd(DAY, -1, '${endDate}'), 120) )
                                                           OR Isnull('${endDate}', '') = '' )
                                                    AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                                            AND R_RC_DSE_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                                           OR Isnull('${goodsCategoryID}', '') = '' )
                                                    AND ( ( Isnull('${supplierID}', '') <> ''
                                                            AND R_RC_DSE_SupplierID = Isnull('${supplierID}', '') )
                                                           OR Isnull('${supplierID}', '') = '' )
                                                    AND ( ( Isnull('${bandID}', '') <> ''
                                                            AND R_RC_DSE_BandID = Isnull('${bandID}', '') )
                                                           OR Isnull('${bandID}', '') = '' )
                                                    AND ( ( Isnull('${goodsID}', '') <> ''
                                                            AND R_RC_DSE_GoodsID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                                           OR Isnull('${goodsID}', '') = '' )
                                                    AND ( ( Isnull('${goodsName}', '') <> ''
                                                            AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                                           OR Isnull('${goodsName}', '') = '' )
                                                    AND ( ( '${bgispecjj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                                           OR ( '${bgispecjj}' = '' ) ) --型号
                                                    AND ( ( '${bgicolorjj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                                           OR ( '${bgicolorjj}' = '' ) ) --色号
                                                    AND ( ( '${bgiframesizejj}' <> ''
                                                            AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                                           OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                                    AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                                            AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                                           OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                                    AND ( ( '${bgirefractivejp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                                           OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                                    AND ( ( '${bgiismutiluminosityjp}' <> ''
                                                            AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                                           OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                                    AND ( ( '${minSphjp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                           OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                                    AND ( ( '${maxSphjp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                           OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                                    AND ( ( '${minCyljp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                           OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                                    AND ( ( '${maxCyljp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                           OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                                    AND ( ( '${bgiusetypeyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                                           OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                                    AND ( ( '${bgistealthclassyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                                           OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                                    AND ( ( '${minSphyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                           OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                                    AND ( ( '${maxSphyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                           OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                                    AND ( ( '${minCylyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                           OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                                    AND ( ( '${maxCylyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                           OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                                    AND ( ( '${minSphlh}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                                           OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                                    AND ( ( '${maxSphlh}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                                           OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                                    AND ( ( '${bgiothergoodsbigclass}' <> ''
                                                            AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                                           OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                                    AND ( ( '${bgiothergoodssmallclass}' <> ''
                                                            AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                                           OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                                    AND ( ( '${bgnretailamount}' <> ''
                                                            AND R_RC_DSE_RetailPrice >= CAST('${bgnretailamount}' AS FLOAT) )
                                                           OR ( '${bgnretailamount}' = '' ) )
                                                    AND ( ( '${endretailamount}' <> ''
                                                            AND R_RC_DSE_RetailPrice <= CAST('${endretailamount}' AS FLOAT) )
                                                           OR ( '${endretailamount}' = '' ) ))TEMP
                                     GROUP  BY CategoryID,
                                               ShopCode,
                                               SupplierID,
                                               SupplierName,
                                               brandid,
                                               BrandName,
                                               GoodsID,
                                               goodsname,
                                               RetailPrice
                                     UNION ALL
                                     SELECT CategoryID,
                                            ShopCode,
                                            SupplierID   AS SupplierID,
                                            SupplierName AS SupplierName,
                                            brandid      AS brandid,
                                            brandName    AS brandName,
                                            GoodsID      AS goodsid,
                                            goodsname    AS goodsname,
                                            SUM(xsNum)   AS xsNum,
                                            SUM(thNum)   AS thNum,
                                            SUM(thje)    AS thje,
                                            SUM(xsje)    AS xsje,
                                            SUM(bhsje)   AS bhsje,
                                            RetailPrice  AS RetailPrice
                                     FROM   (SELECT S_SE_SB_ShopCode                                              AS ShopCode,
                                                    S_SE_SD_CommoditiesFlag                                       AS CategoryID,
                                                    B_SP_ID                                                       AS SupplierID,
                                                    B_SP_SupplierName                                             AS SupplierName,
                                                    B_BD_ID                                                       AS brandid,
                                                    B_BD_brandName                                                AS brandName,
                                                    S_SE_SD_SalesItemID                                           AS GoodsID,
                                                    B_GI_ViewGoodsName                                            AS goodsname,
                                                    Isnull(SUM(Isnull(S_SE_SD_Number, 0)), 0)                     AS xsNum,
                                                    0                                                             AS thNum,
                                                    0                                                             AS thje,
                                                    Isnull(SUM(Isnull(S_SE_SD_SalesValue, 0)), 0)                 AS xsje,
                                                    Isnull(SUM(Isnull(S_SE_SD_UnitPrice * S_SE_SD_Number, 0)), 0) AS bhsje,
                                                    B_GI_RetailPrice                                              AS RetailPrice
                                             FROM   S_SE_SalesBasic
                                                    INNER JOIN S_SE_SalesDetail
                                                      ON S_SE_SB_SalesID = S_SE_SD_SalesID
                                                    LEFT JOIN B_GoodsInfo
                                                      ON S_SE_SD_SalesItemID = B_GI_GoodsID
                                                    LEFT JOIN B_Brand
                                                      ON B_BD_ID = B_GI_BrandID
                                                         AND B_GI_SupplierID = B_BD_SupplierID
                                                    LEFT JOIN B_Supplier
                                                      ON B_GI_SupplierID = B_SP_ID
                                             WHERE  S_SE_SB_ValueFlag = '1'
                                                    AND ( ( Isnull('${shopCode}', '') <> ''
                                                            AND S_SE_SB_ShopCode IN (SELECT departmentID
                                                                                     FROM   #salesDepartments) )
                                                           OR Isnull('${shopCode}', '') = '' )
                                                    AND ( ( Isnull('${bgnDate}', '') <> ''
                                                            AND CONVERT(VARCHAR(10), S_SE_SB_PosDatetime, 120) >= CONVERT(VARCHAR(10), Getdate(), 23) )
                                                           OR Isnull('${bgnDate}', '') = '' )
                                                    AND ( ( Isnull('${endDate}', '') <> ''
                                                            AND CONVERT(VARCHAR(10), S_SE_SB_PosDatetime, 120) <= CONVERT(VARCHAR(10), Getdate(), 23) )
                                                           OR Isnull('${endDate}', '') = '' )
                                                    AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                                            AND B_GI_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                                           OR Isnull('${goodsCategoryID}', '') = '' )
                                                    AND ( ( Isnull('${supplierID}', '') <> ''
                                                            AND B_GI_SupplierID = Isnull('${supplierID}', '') )
                                                           OR Isnull('${supplierID}', '') = '' )
                                                    AND ( ( Isnull('${bandID}', '') <> ''
                                                            AND B_GI_BrandID = Isnull('${bandID}', '') )
                                                           OR Isnull('${bandID}', '') = '' )
                                                    AND ( ( Isnull('${goodsID}', '') <> ''
                                                            AND S_SE_SD_SalesItemID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                                           OR Isnull('${goodsID}', '') = '' )
                                                    AND ( ( Isnull('${goodsName}', '') <> ''
                                                            AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                                           OR Isnull('${goodsName}', '') = '' )
                                                    AND ( ( '${bgispecjj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                                           OR ( '${bgispecjj}' = '' ) ) --型号
                                                    AND ( ( '${bgicolorjj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                                           OR ( '${bgicolorjj}' = '' ) ) --色号
                                                    AND ( ( '${bgiframesizejj}' <> ''
                                                            AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                                           OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                                    AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                                            AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                                           OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                                    AND ( ( '${bgirefractivejp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                                           OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                                    AND ( ( '${bgiismutiluminosityjp}' <> ''
                                                            AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                                           OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                                    AND ( ( '${minSphjp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                           OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                                    AND ( ( '${maxSphjp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                           OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                                    AND ( ( '${minCyljp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                           OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                                    AND ( ( '${maxCyljp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                           OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                                    AND ( ( '${bgiusetypeyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                                           OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                                    AND ( ( '${bgistealthclassyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                                           OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                                    AND ( ( '${minSphyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                           OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                                    AND ( ( '${maxSphyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                           OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                                    AND ( ( '${minCylyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                           OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                                    AND ( ( '${maxCylyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                           OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                                    AND ( ( '${minSphlh}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                                           OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                                    AND ( ( '${maxSphlh}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                                           OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                                    AND ( ( '${bgiothergoodsbigclass}' <> ''
                                                            AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                                           OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                                    AND ( ( '${bgiothergoodssmallclass}' <> ''
                                                            AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                                           OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                                    AND ( ( '${bgnretailamount}' <> ''
                                                            AND S_SE_SD_Sprice >= CAST('${bgnretailamount}' AS FLOAT) )
                                                           OR ( '${bgnretailamount}' = '' ) )
                                                    AND ( ( '${endretailamount}' <> ''
                                                            AND S_SE_SD_Sprice <= CAST('${endretailamount}' AS FLOAT) )
                                                           OR ( '${endretailamount}' = '' ) )
                                             GROUP  BY S_SE_SD_SalesItemID,
                                                       B_GI_ViewGoodsName,
                                                       B_BD_ID,
                                                       S_SE_SD_CommoditiesFlag,
                                                       S_SE_SB_ShopCode,
                                                       B_SP_ID,
                                                       B_SP_SupplierName,
                                                       B_BD_brandName,
                                                       B_GI_RetailPrice
                                             UNION ALL
                                             SELECT S_SE_SB_ShopCode                                               AS ShopCode,
                                                    S_SE_SD_CommoditiesFlag                                        AS CategoryID,
                                                    B_SP_ID                                                        AS SupplierID,
                                                    B_SP_SupplierName                                              AS SupplierName,
                                                    B_BD_ID                                                        AS brandid,
                                                    B_BD_brandName                                                 AS brandName,
                                                    S_SE_SD_SalesItemID                                            AS GoodsID,
                                                    B_GI_ViewGoodsName                                             AS goodsname,
                                                    0                                                              AS xsNum,
                                                    -Isnull(SUM(Isnull(S_SE_SD_Number, 0)), 0)                     AS thNum,
                                                    -Isnull(SUM(Isnull(S_SE_SD_SalesValue, 0)), 0)                 AS thje,
                                                    0                                                              AS xsje,
                                                    -Isnull(SUM(Isnull(S_SE_SD_UnitPrice * S_SE_SD_Number, 0)), 0) AS bhsje,
                                                    B_GI_RetailPrice                                               AS RetailPrice
                                             FROM   S_SE_SalesBasic
                                                    INNER JOIN S_SE_SalesDetail
                                                      ON S_SE_SB_SalesID = S_SE_SD_SalesID
                                                    LEFT JOIN B_GoodsInfo
                                                      ON S_SE_SD_SalesItemID = B_GI_GoodsID
                                                    LEFT JOIN B_Brand
                                                      ON B_BD_ID = B_GI_BrandID
                                                         AND B_GI_SupplierID = B_BD_SupplierID
                                                    LEFT JOIN B_Supplier
                                                      ON B_GI_SupplierID = B_SP_ID
                                             WHERE  S_SE_SB_ValueFlag = '1'
                                                    AND S_SE_SB_WithdrawFlag = '1'
                                                    AND ( ( Isnull('${shopCode}', '') <> ''
                                                            AND S_SE_SB_ShopCode IN (SELECT departmentID
                                                                                     FROM   #salesDepartments) )
                                                           OR Isnull('${shopCode}', '') = '' )
                                                    AND ( ( Isnull('${bgnDate}', '') <> ''
                                                            AND CONVERT(VARCHAR(10), S_SE_SB_WithdrawDate, 120) >= CONVERT(VARCHAR(10), Getdate(), 23) )
                                                           OR Isnull('${bgnDate}', '') = '' )
                                                    AND ( ( Isnull('${endDate}', '') <> ''
                                                            AND CONVERT(VARCHAR(10), S_SE_SB_WithdrawDate, 120) <= CONVERT(VARCHAR(10), Getdate(), 23) )
                                                           OR Isnull('${endDate}', '') = '' )
                                                    AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                                            AND B_GI_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                                           OR Isnull('${goodsCategoryID}', '') = '' )
                                                    AND ( ( Isnull('${supplierID}', '') <> ''
                                                            AND B_GI_SupplierID = Isnull('${supplierID}', '') )
                                                           OR Isnull('${supplierID}', '') = '' )
                                                    AND ( ( Isnull('${bandID}', '') <> ''
                                                            AND B_GI_BrandID = Isnull('${bandID}', '') )
                                                           OR Isnull('${bandID}', '') = '' )
                                                    AND ( ( Isnull('${goodsID}', '') <> ''
                                                            AND S_SE_SD_SalesItemID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                                           OR Isnull('${goodsID}', '') = '' )
                                                    AND ( ( Isnull('${goodsName}', '') <> ''
                                                            AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                                           OR Isnull('${goodsName}', '') = '' )
                                                    AND ( ( '${bgispecjj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                                           OR ( '${bgispecjj}' = '' ) ) --型号
                                                    AND ( ( '${bgicolorjj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                                           OR ( '${bgicolorjj}' = '' ) ) --色号
                                                    AND ( ( '${bgiframesizejj}' <> ''
                                                            AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                                           OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                                    AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                                            AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                                           OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                                    AND ( ( '${bgirefractivejp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                                           OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                                    AND ( ( '${bgiismutiluminosityjp}' <> ''
                                                            AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                                           OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                                    AND ( ( '${minSphjp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                           OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                                    AND ( ( '${maxSphjp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                           OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                                    AND ( ( '${minCyljp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                           OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                                    AND ( ( '${maxCyljp}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                           OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                                    AND ( ( '${bgiusetypeyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                                           OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                                    AND ( ( '${bgistealthclassyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                                           OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                                    AND ( ( '${minSphyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                           OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                                    AND ( ( '${maxSphyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                           OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                                    AND ( ( '${minCylyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                           OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                                    AND ( ( '${maxCylyj}' <> ''
                                                            AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                           OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                                    AND ( ( '${minSphlh}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                                           OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                                    AND ( ( '${maxSphlh}' <> ''
                                                            AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                                           OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                                    AND ( ( '${bgiothergoodsbigclass}' <> ''
                                                            AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                                           OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                                    AND ( ( '${bgiothergoodssmallclass}' <> ''
                                                            AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                                           OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                                    AND ( ( '${bgnretailamount}' <> ''
                                                            AND S_SE_SD_Sprice >= CAST('${bgnretailamount}' AS FLOAT) )
                                                           OR ( '${bgnretailamount}' = '' ) )
                                                    AND ( ( '${endretailamount}' <> ''
                                                            AND S_SE_SD_Sprice <= CAST('${endretailamount}' AS FLOAT) )
                                                           OR ( '${endretailamount}' = '' ) )
                                             GROUP  BY S_SE_SD_SalesItemID,
                                                       B_GI_ViewGoodsName,
                                                       B_BD_ID,
                                                       S_SE_SD_CommoditiesFlag,
                                                       S_SE_SB_ShopCode,
                                                       B_SP_ID,
                                                       B_SP_SupplierName,
                                                       B_BD_brandName,
                                                       B_GI_RetailPrice)TEMP
                                     GROUP  BY CategoryID,
                                               ShopCode,
                                               SupplierID,
                                               SupplierName,
                                               brandid,
                                               brandName,
                                               goodsid,
                                               goodsname,
                                               RetailPrice)TEMP
                                    LEFT JOIN B_GoodsCategory
                                      ON CategoryID = B_GC_ID
                                    LEFT JOIN B_Supplier
                                      ON B_SP_ID = SupplierID
                                    LEFT JOIN B_Brand
                                      ON B_BD_SupplierID = SupplierID
                                         AND B_BD_ID = brandid
                             GROUP  BY CategoryID,
                                       B_GC_GoodsCategoryName,
                                       SupplierID,
                                       B_SP_SupplierName,
                                       BrandID,
                                       B_BD_brandName,
                                       RetailPrice)t2
                     ON t1.SupplierID = t2.SupplierID
                        AND t1.CategoryID = t2.CategoryID
                        AND t1.brandid = t2.brandid
                        AND t1.goodsid = t2.goodsid
						AND t1.RetailPrice = t2.RetailPrice
                   LEFT JOIN B_Brand
                     ON B_BD_SupplierID = t1.SupplierID
                        AND B_BD_ID = t1.brandid
                   LEFT JOIN B_FrameMaterial
                     ON B_FM_ID = B_BD_FrameMaterialType
				   left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) < '${bgnDate}'
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_qc on t1.goodsid = stock_qc.GoodsID and stock_qc.deptID = t1.ShopCode and stock_qc.RetailPrice = t1.RetailPrice
					left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) <= '${endDate}'
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_qm on t1.goodsid = stock_qm.GoodsID and stock_qm.deptID = t1.ShopCode and stock_qm.RetailPrice = t1.RetailPrice
					left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) >= '${bgnDate}'
						  and convert(varchar(10),C_SH_SL_WarehousingDate,23) <= '${endDate}'
						  and (C_SH_SL_ChangeID like 'PIN%' or C_SH_SL_ChangeID like 'ALL%')
						  and C_SH_SL_GoodsQuantity > 0
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_cg on t1.goodsid = stock_cg.GoodsID and stock_cg.deptID = t1.ShopCode and stock_cg.RetailPrice = t1.RetailPrice
					left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						-sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) >= '${bgnDate}'
						  and convert(varchar(10),C_SH_SL_WarehousingDate,23) <= '${endDate}'
						  and (C_SH_SL_ChangeID like 'pout%' or C_SH_SL_ChangeID like 'ALL%')
						  and C_SH_SL_GoodsQuantity < 0
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_th on t1.goodsid = stock_th.GoodsID and stock_th.deptID = t1.ShopCode and stock_th.RetailPrice = t1.RetailPrice
					left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) >= '${bgnDate}'
						  and convert(varchar(10),C_SH_SL_WarehousingDate,23) <= '${endDate}'
						  and (C_SH_SL_ChangeID like 'sco%' or C_SH_SL_ChangeID like 'sci%')
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_yk on t1.goodsid = stock_yk.GoodsID and stock_yk.deptID = t1.ShopCode and stock_yk.RetailPrice = t1.RetailPrice
        
        END
  END
ELSE
  BEGIN
      SELECT t1.CategoryID,
             t1.GoodsCategoryName,
             t1.SupplierID,
             t1.brandid,
             t1.goodsid,
             t1.goodsname,
             t1. ShopCode,
             t1.ShopCodeName,
             t1.xsNum,
             t1.thNum,
             t1.shNum,
             t1.thje,
             t1.xsje,
             t1.shje,
             t2.xsNum2,
             t2.thNum2,
             t2.shNum2,
             t2.thje2,
             t2.xsje2,
             t2.shje2,
             CASE
               WHEN Isnull(t2.shje2, 0.00) = 0.00 THEN '0%'
               ELSE CAST(CAST(t1.shje / t2.shje2 * 100 AS DECIMAL(18, 2)) AS VARCHAR(20)) + '%'
             END                                            AS jezb,
             CASE
               WHEN Isnull(t2.bhsje2, 0.00) = 0.00 THEN '0%'
               ELSE CAST(CAST(t1.bhsje / t2.bhsje2 * 100 AS DECIMAL(18, 2)) AS VARCHAR(20)) + '%'
             END                                            AS cbzb,
             CAST(Isnull(t1.bhsje, 0.00)AS DECIMAL(18, 2))  AS bhsje,
             CAST(Isnull(t2.bhsje2, 0.00)AS DECIMAL(18, 2)) AS bhsje2,
             t1.mlje,
             t2.mlje2,
             CASE
               WHEN Isnull(t1.shje, 0.00) = 0.00 THEN '0%'
               ELSE CAST(CAST(t1.mlje / t1.shje * 100 AS DECIMAL(18, 2)) AS VARCHAR(20)) + '%'
             END                                            AS xsmll,
             CASE
               WHEN Isnull(t2.shje2, 0.00) = 0.00 THEN '0%'
               ELSE CAST(CAST(t2.mlje2 / t2.shje2 * 100 AS DECIMAL(18, 2)) AS VARCHAR(20)) + '%'
             END                                            AS xsmll2,
             B_FM_Name                                      AS czname,
             CASE
               WHEN B_BD_Settlement = '1' THEN '现金'
               WHEN B_BD_Settlement = '2' THEN '数期'
               WHEN B_BD_Settlement = '3' THEN '代销月结'
               WHEN B_BD_Settlement = '4' THEN '信用额周转'
             END                                            AS jstype,
             t1.RetailPrice                                    AS RetailPrice,
				   stock_qc.GoodsQuantity							 as GoodsQuantityqc,
				   stock_qm.GoodsQuantity							 as GoodsQuantityqm,
				   stock_cg.GoodsQuantity							 as GoodsQuantitycg,
                   stock_th.GoodsQuantity							 as GoodsQuantityth,
				   stock_yk.GoodsQuantity							 as GoodsQuantityyk
      FROM   (SELECT CategoryID                                    AS CategoryID,
                     B_GC_GoodsCategoryName                        AS GoodsCategoryName,
                     SupplierID                                    AS SupplierID,
                     CategoryID + '.' + SupplierID + '.' + brandid AS goodsid,
                     brandid                                       AS brandid,
                     B_BD_brandName                                AS goodsname,
                     ShopCode,
                     B_DP_DepartmentName                           AS ShopCodeName,
                     SUM(xsNum)                                    AS xsNum,
                     SUM(thNum)                                    AS thNum,
                     SUM(xsNum) + SUM(thNum)                       AS shNum,
                     SUM(thje)                                     AS thje,
                     SUM(xsje)                                     AS xsje,
                     SUM(thje) + SUM(xsje)                         AS shje,
                     SUM(bhsje)                                    AS bhsje,
                     SUM(thje) + SUM(xsje) - SUM(bhsje)            AS mlje,
                     RetailPrice                                   AS RetailPrice
              FROM   (SELECT CategoryID,
                             ShopCode,
                             SupplierID   AS SupplierID,
                             SupplierName AS SupplierName,
                             brandid      AS brandid,
                             brandName    AS brandName,
                             goodsid      AS goodsid,
                             goodsname    AS goodsname,
                             SUM(xsNum)   AS xsNum,
                             SUM(thNum)   AS thNum,
                             SUM(thje)    AS thje,
                             SUM(xsje)    AS xsje,
                             SUM(bhsje)   AS bhsje,
                             RetailPrice  AS RetailPrice
                      FROM   (SELECT S_SE_SB_ShopCode                                              AS ShopCode,
                                     S_SE_SD_CommoditiesFlag                                       AS CategoryID,
                                     B_SP_ID                                                       AS SupplierID,
                                     B_SP_SupplierName                                             AS SupplierName,
                                     B_BD_ID                                                       AS brandid,
                                     B_BD_brandName                                                AS brandName,
                                     S_SE_SD_SalesItemID                                           AS GoodsID,
                                     B_GI_ViewGoodsName                                            AS goodsname,
                                     Isnull(SUM(Isnull(S_SE_SD_Number, 0)), 0)                     AS xsNum,
                                     0                                                             AS thNum,
                                     0                                                             AS thje,
                                     Isnull(SUM(Isnull(S_SE_SD_SalesValue, 0)), 0)                 AS xsje,
                                     Isnull(SUM(Isnull(S_SE_SD_UnitPrice * S_SE_SD_Number, 0)), 0) AS bhsje,
                                     B_GI_RetailPrice                                              AS RetailPrice
                              FROM   S_SE_SalesBasic
                                     INNER JOIN S_SE_SalesDetail
                                       ON S_SE_SB_SalesID = S_SE_SD_SalesID
                                     LEFT JOIN B_GoodsInfo
                                       ON S_SE_SD_SalesItemID = B_GI_GoodsID
                                     LEFT JOIN B_Brand
                                       ON B_BD_ID = B_GI_BrandID
                                          AND B_GI_SupplierID = B_BD_SupplierID
                                     LEFT JOIN B_Supplier
                                       ON B_GI_SupplierID = B_SP_ID
                              WHERE  S_SE_SB_ValueFlag = '1'
                                     AND ( ( Isnull('${shopCode}', '') <> ''
                                             AND S_SE_SB_ShopCode IN (SELECT departmentID
                                                                      FROM   #salesDepartments) )
                                            OR Isnull('${shopCode}', '') = '' )
                                     AND ( ( Isnull('${bgnDate}', '') <> ''
                                             AND CONVERT(VARCHAR(10), S_SE_SB_PosDatetime, 120) >= CONVERT(VARCHAR(10), Getdate(), 23) )
                                            OR Isnull('${bgnDate}', '') = '' )
                                     AND ( ( Isnull('${endDate}', '') <> ''
                                             AND CONVERT(VARCHAR(10), S_SE_SB_PosDatetime, 120) <= CONVERT(VARCHAR(10), Getdate(), 23) )
                                            OR Isnull('${endDate}', '') = '' )
                                     AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                             AND B_GI_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                            OR Isnull('${goodsCategoryID}', '') = '' )
                                     AND ( ( Isnull('${supplierID}', '') <> ''
                                             AND B_GI_SupplierID = Isnull('${supplierID}', '') )
                                            OR Isnull('${supplierID}', '') = '' )
                                     AND ( ( Isnull('${bandID}', '') <> ''
                                             AND B_GI_BrandID = Isnull('${bandID}', '') )
                                            OR Isnull('${bandID}', '') = '' )
                                     AND ( ( Isnull('${goodsID}', '') <> ''
                                             AND S_SE_SD_SalesItemID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                            OR Isnull('${goodsID}', '') = '' )
                                     AND ( ( Isnull('${goodsName}', '') <> ''
                                             AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                            OR Isnull('${goodsName}', '') = '' )
                                     AND ( ( '${bgispecjj}' <> ''
                                             AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                            OR ( '${bgispecjj}' = '' ) ) --型号
                                     AND ( ( '${bgicolorjj}' <> ''
                                             AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                            OR ( '${bgicolorjj}' = '' ) ) --色号
                                     AND ( ( '${bgiframesizejj}' <> ''
                                             AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                            OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                     AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                             AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                            OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                     AND ( ( '${bgirefractivejp}' <> ''
                                             AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                            OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                     AND ( ( '${bgiismutiluminosityjp}' <> ''
                                             AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                            OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                     AND ( ( '${minSphjp}' <> ''
                                             AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                            OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                     AND ( ( '${maxSphjp}' <> ''
                                             AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                            OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                     AND ( ( '${minCyljp}' <> ''
                                             AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                            OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                     AND ( ( '${maxCyljp}' <> ''
                                             AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                            OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                     AND ( ( '${bgiusetypeyj}' <> ''
                                             AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                            OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                     AND ( ( '${bgistealthclassyj}' <> ''
                                             AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                            OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                     AND ( ( '${minSphyj}' <> ''
                                             AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                            OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                     AND ( ( '${maxSphyj}' <> ''
                                             AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                            OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                     AND ( ( '${minCylyj}' <> ''
                                             AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                            OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                     AND ( ( '${maxCylyj}' <> ''
                                             AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                            OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                     AND ( ( '${minSphlh}' <> ''
                                             AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                            OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                     AND ( ( '${maxSphlh}' <> ''
                                             AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                            OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                     AND ( ( '${bgiothergoodsbigclass}' <> ''
                                             AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                            OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                     AND ( ( '${bgiothergoodssmallclass}' <> ''
                                             AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                            OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                     AND ( ( '${bgnretailamount}' <> ''
                                             AND S_SE_SD_Sprice >= CAST('${bgnretailamount}' AS FLOAT) )
                                            OR ( '${bgnretailamount}' = '' ) )
                                     AND ( ( '${endretailamount}' <> ''
                                             AND S_SE_SD_Sprice <= CAST('${endretailamount}' AS FLOAT) )
                                            OR ( '${endretailamount}' = '' ) )
                              GROUP  BY S_SE_SD_SalesItemID,
                                        B_GI_ViewGoodsName,
                                        B_BD_ID,
                                        S_SE_SD_CommoditiesFlag,
                                        S_SE_SB_ShopCode,
                                        B_SP_ID,
                                        B_SP_SupplierName,
                                        B_BD_brandName,
                                        B_GI_RetailPrice
                              UNION ALL
                              SELECT S_SE_SB_ShopCode                                               AS ShopCode,
                                     S_SE_SD_CommoditiesFlag                                        AS CategoryID,
                                     B_SP_ID                                                        AS SupplierID,
                                     B_SP_SupplierName                                              AS SupplierName,
                                     B_BD_ID                                                        AS brandid,
                                     B_BD_brandName                                                 AS brandName,
                                     S_SE_SD_SalesItemID                                            AS GoodsID,
                                     B_GI_ViewGoodsName                                             AS goodsname,
                                     0                                                              AS xsNum,
                                     -Isnull(SUM(Isnull(S_SE_SD_Number, 0)), 0)                     AS thNum,
                                     -Isnull(SUM(Isnull(S_SE_SD_SalesValue, 0)), 0)                 AS thje,
                                     0                                                              AS xsje,
                                     -Isnull(SUM(Isnull(S_SE_SD_UnitPrice * S_SE_SD_Number, 0)), 0) AS bhsje,
                                     B_GI_RetailPrice                                               AS RetailPrice
                              FROM   S_SE_SalesBasic
                                     INNER JOIN S_SE_SalesDetail
                                       ON S_SE_SB_SalesID = S_SE_SD_SalesID
                                     LEFT JOIN B_GoodsInfo
                                       ON S_SE_SD_SalesItemID = B_GI_GoodsID
                                     LEFT JOIN B_Brand
                                       ON B_BD_ID = B_GI_BrandID
                                          AND B_GI_SupplierID = B_BD_SupplierID
                                     LEFT JOIN B_Supplier
                                       ON B_GI_SupplierID = B_SP_ID
                              WHERE  S_SE_SB_ValueFlag = '1'
                                     AND S_SE_SB_WithdrawFlag = '1'
                                     AND ( ( Isnull('${shopCode}', '') <> ''
                                             AND S_SE_SB_ShopCode IN (SELECT departmentID
                                                                      FROM   #salesDepartments) )
                                            OR Isnull('${shopCode}', '') = '' )
                                     AND ( ( Isnull('${bgnDate}', '') <> ''
                                             AND CONVERT(VARCHAR(10), S_SE_SB_WithdrawDate, 120) >= CONVERT(VARCHAR(10), Getdate(), 23) )
                                            OR Isnull('${bgnDate}', '') = '' )
                                     AND ( ( Isnull('${endDate}', '') <> ''
                                             AND CONVERT(VARCHAR(10), S_SE_SB_WithdrawDate, 120) <= CONVERT(VARCHAR(10), Getdate(), 23) )
                                            OR Isnull('${endDate}', '') = '' )
                                     AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                             AND B_GI_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                            OR Isnull('${goodsCategoryID}', '') = '' )
                                     AND ( ( Isnull('${supplierID}', '') <> ''
                                             AND B_GI_SupplierID = Isnull('${supplierID}', '') )
                                            OR Isnull('${supplierID}', '') = '' )
                                     AND ( ( Isnull('${bandID}', '') <> ''
                                             AND B_GI_BrandID = Isnull('${bandID}', '') )
                                            OR Isnull('${bandID}', '') = '' )
                                     AND ( ( Isnull('${goodsID}', '') <> ''
                                             AND S_SE_SD_SalesItemID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                            OR Isnull('${goodsID}', '') = '' )
                                     AND ( ( Isnull('${goodsName}', '') <> ''
                                             AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                            OR Isnull('${goodsName}', '') = '' )
                                     AND ( ( '${bgispecjj}' <> ''
                                             AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                            OR ( '${bgispecjj}' = '' ) ) --型号
                                     AND ( ( '${bgicolorjj}' <> ''
                                             AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                            OR ( '${bgicolorjj}' = '' ) ) --色号
                                     AND ( ( '${bgiframesizejj}' <> ''
                                             AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                            OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                     AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                             AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                            OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                     AND ( ( '${bgirefractivejp}' <> ''
                                             AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                            OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                     AND ( ( '${bgiismutiluminosityjp}' <> ''
                                             AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                            OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                     AND ( ( '${minSphjp}' <> ''
                                             AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                            OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                     AND ( ( '${maxSphjp}' <> ''
                                             AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                            OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                     AND ( ( '${minCyljp}' <> ''
                                             AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                            OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                     AND ( ( '${maxCyljp}' <> ''
                                             AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                            OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                     AND ( ( '${bgiusetypeyj}' <> ''
                                             AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                            OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                     AND ( ( '${bgistealthclassyj}' <> ''
                                             AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                            OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                     AND ( ( '${minSphyj}' <> ''
                                             AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                            OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                     AND ( ( '${maxSphyj}' <> ''
                                             AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                            OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                     AND ( ( '${minCylyj}' <> ''
                                             AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                            OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                     AND ( ( '${maxCylyj}' <> ''
                                             AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                            OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                     AND ( ( '${minSphlh}' <> ''
                                             AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                            OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                     AND ( ( '${maxSphlh}' <> ''
                                             AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                            OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                     AND ( ( '${bgiothergoodsbigclass}' <> ''
                                             AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                            OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                     AND ( ( '${bgiothergoodssmallclass}' <> ''
                                             AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                            OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                     AND ( ( '${bgnretailamount}' <> ''
                                             AND S_SE_SD_Sprice >= CAST('${bgnretailamount}' AS FLOAT) )
                                            OR ( '${bgnretailamount}' = '' ) )
                                     AND ( ( '${endretailamount}' <> ''
                                             AND S_SE_SD_Sprice <= CAST('${endretailamount}' AS FLOAT) )
                                            OR ( '${endretailamount}' = '' ) )
                              GROUP  BY S_SE_SD_SalesItemID,
                                        B_GI_ViewGoodsName,
                                        B_BD_ID,
                                        S_SE_SD_CommoditiesFlag,
                                        S_SE_SB_ShopCode,
                                        B_SP_ID,
                                        B_SP_SupplierName,
                                        B_BD_brandName,
                                        B_GI_RetailPrice)TEMP
                      GROUP  BY CategoryID,
                                ShopCode,
                                SupplierID,
                                SupplierName,
                                BrandID,
                                brandName,
                                goodsid,
                                goodsname,
                                RetailPrice)TEMP
                     LEFT JOIN B_Departments
                       ON B_DP_DepartmentID = ShopCode
                     LEFT JOIN B_GoodsCategory
                       ON CategoryID = B_GC_ID
                     LEFT JOIN B_Supplier
                       ON B_SP_ID = SupplierID
                     LEFT JOIN B_Brand
                       ON B_BD_SupplierID = SupplierID
                          AND B_BD_ID = brandid
              GROUP  BY CategoryID,
                        B_GC_GoodsCategoryName,
                        ShopCode,
                        B_DP_DepartmentName,
                        SupplierID,
                        B_SP_SupplierName,
                        BrandID,
                        B_BD_brandName,RetailPrice)t1
             LEFT JOIN (SELECT CategoryID                                    AS CategoryID,
                               B_GC_GoodsCategoryName                        AS GoodsCategoryName,
                               SupplierID                                    AS SupplierID,
                               brandid                                       AS brandid,
                               CategoryID + '.' + SupplierID + '.' + brandid AS goodsid,
                               B_BD_brandName                                AS goodsname,
                               SUM(xsNum)                                    AS xsNum2,
                               SUM(thNum)                                    AS thNum2,
                               SUM(xsNum) + SUM(thNum)                       AS shNum2,
                               SUM(thje)                                     AS thje2,
                               SUM(xsje)                                     AS xsje2,
                               SUM(thje) + SUM(xsje)                         AS shje2,
                               SUM(bhsje)                                    AS bhsje2,
                               SUM(thje) + SUM(xsje) - SUM(bhsje)            AS mlje2,
                               RetailPrice                                   AS RetailPrice
                        FROM   (SELECT CategoryID,
                                       ShopCode,
                                       SupplierID   AS SupplierID,
                                       SupplierName AS SupplierName,
                                       brandid      AS brandid,
                                       brandName    AS brandName,
                                       goodsid      AS goodsid,
                                       goodsname    AS goodsname,
                                       SUM(xsNum)   AS xsNum,
                                       SUM(thNum)   AS thNum,
                                       SUM(thje)    AS thje,
                                       SUM(xsje)    AS xsje,
                                       SUM(bhsje)   AS bhsje,
                                       RetailPrice  AS RetailPrice
                                FROM   (SELECT S_SE_SB_ShopCode                                              AS ShopCode,
                                               S_SE_SD_CommoditiesFlag                                       AS CategoryID,
                                               B_SP_ID                                                       AS SupplierID,
                                               B_SP_SupplierName                                             AS SupplierName,
                                               B_BD_ID                                                       AS brandid,
                                               B_BD_brandName                                                AS brandName,
                                               S_SE_SD_SalesItemID                                           AS GoodsID,
                                               B_GI_ViewGoodsName                                            AS goodsname,
                                               Isnull(SUM(Isnull(S_SE_SD_Number, 0)), 0)                     AS xsNum,
                                               0                                                             AS thNum,
                                               0                                                             AS thje,
                                               Isnull(SUM(Isnull(S_SE_SD_SalesValue, 0)), 0)                 AS xsje,
                                               Isnull(SUM(Isnull(S_SE_SD_UnitPrice * S_SE_SD_Number, 0)), 0) AS bhsje,
                                               B_GI_RetailPrice                                              AS RetailPrice
                                        FROM   S_SE_SalesBasic
                                               INNER JOIN S_SE_SalesDetail
                                                 ON S_SE_SB_SalesID = S_SE_SD_SalesID
                                               LEFT JOIN B_GoodsInfo
                                                 ON S_SE_SD_SalesItemID = B_GI_GoodsID
                                               LEFT JOIN B_Brand
                                                 ON B_BD_ID = B_GI_BrandID
                                                    AND B_GI_SupplierID = B_BD_SupplierID
                                               LEFT JOIN B_Supplier
                                                 ON B_GI_SupplierID = B_SP_ID
                                        WHERE  S_SE_SB_ValueFlag = '1'
                                               AND ( ( Isnull('${shopCode}', '') <> ''
                                                       AND S_SE_SB_ShopCode IN (SELECT departmentID
                                                                                FROM   #salesDepartments) )
                                                      OR Isnull('${shopCode}', '') = '' )
                                               AND ( ( Isnull('${bgnDate}', '') <> ''
                                                       AND CONVERT(VARCHAR(10), S_SE_SB_PosDatetime, 120) >= CONVERT(VARCHAR(10), Getdate(), 23) )
                                                      OR Isnull('${bgnDate}', '') = '' )
                                               AND ( ( Isnull('${endDate}', '') <> ''
                                                       AND CONVERT(VARCHAR(10), S_SE_SB_PosDatetime, 120) <= CONVERT(VARCHAR(10), Getdate(), 23) )
                                                      OR Isnull('${endDate}', '') = '' )
                                               AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                                       AND B_GI_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                                      OR Isnull('${goodsCategoryID}', '') = '' )
                                               AND ( ( Isnull('${supplierID}', '') <> ''
                                                       AND B_GI_SupplierID = Isnull('${supplierID}', '') )
                                                      OR Isnull('${supplierID}', '') = '' )
                                               AND ( ( Isnull('${bandID}', '') <> ''
                                                       AND B_GI_BrandID = Isnull('${bandID}', '') )
                                                      OR Isnull('${bandID}', '') = '' )
                                               AND ( ( Isnull('${goodsID}', '') <> ''
                                                       AND S_SE_SD_SalesItemID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                                      OR Isnull('${goodsID}', '') = '' )
                                               AND ( ( Isnull('${goodsName}', '') <> ''
                                                       AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                                      OR Isnull('${goodsName}', '') = '' )
                                               AND ( ( '${bgispecjj}' <> ''
                                                       AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                                      OR ( '${bgispecjj}' = '' ) ) --型号
                                               AND ( ( '${bgicolorjj}' <> ''
                                                       AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                                      OR ( '${bgicolorjj}' = '' ) ) --色号
                                               AND ( ( '${bgiframesizejj}' <> ''
                                                       AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                                      OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                               AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                                       AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                                      OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                               AND ( ( '${bgirefractivejp}' <> ''
                                                       AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                                      OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                               AND ( ( '${bgiismutiluminosityjp}' <> ''
                                                       AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                                      OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                               AND ( ( '${minSphjp}' <> ''
                                                       AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                      OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                               AND ( ( '${maxSphjp}' <> ''
                                                       AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                      OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                               AND ( ( '${minCyljp}' <> ''
                                                       AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                      OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                               AND ( ( '${maxCyljp}' <> ''
                                                       AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                      OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                               AND ( ( '${bgiusetypeyj}' <> ''
                                                       AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                                      OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                               AND ( ( '${bgistealthclassyj}' <> ''
                                                       AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                                      OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                               AND ( ( '${minSphyj}' <> ''
                                                       AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                      OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                               AND ( ( '${maxSphyj}' <> ''
                                                       AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                      OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                               AND ( ( '${minCylyj}' <> ''
                                                       AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                      OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                               AND ( ( '${maxCylyj}' <> ''
                                                       AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                      OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                               AND ( ( '${minSphlh}' <> ''
                                                       AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                                      OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                               AND ( ( '${maxSphlh}' <> ''
                                                       AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                                      OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                               AND ( ( '${bgiothergoodsbigclass}' <> ''
                                                       AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                                      OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                               AND ( ( '${bgiothergoodssmallclass}' <> ''
                                                       AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                                      OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                               AND ( ( '${bgnretailamount}' <> ''
                                                       AND S_SE_SD_Sprice >= CAST('${bgnretailamount}' AS FLOAT) )
                                                      OR ( '${bgnretailamount}' = '' ) )
                                               AND ( ( '${endretailamount}' <> ''
                                                       AND S_SE_SD_Sprice <= CAST('${endretailamount}' AS FLOAT) )
                                                      OR ( '${endretailamount}' = '' ) )
                                        GROUP  BY S_SE_SD_SalesItemID,
                                                  B_GI_ViewGoodsName,
                                                  B_BD_ID,
                                                  S_SE_SD_CommoditiesFlag,
                                                  S_SE_SB_ShopCode,
                                                  B_SP_ID,
                                                  B_SP_SupplierName,
                                                  B_BD_brandName,
                                                  B_GI_RetailPrice
                                        UNION ALL
                                        SELECT S_SE_SB_ShopCode                                               AS ShopCode,
                                               S_SE_SD_CommoditiesFlag                                        AS CategoryID,
                                               B_SP_ID                                                        AS SupplierID,
                                               B_SP_SupplierName                                              AS SupplierName,
                                               B_BD_ID                                                        AS brandid,
                                               B_BD_brandName                                                 AS brandName,
                                               S_SE_SD_SalesItemID                                            AS GoodsID,
                                               B_GI_ViewGoodsName                                             AS goodsname,
                                               0                                                              AS xsNum,
                                               -Isnull(SUM(Isnull(S_SE_SD_Number, 0)), 0)                     AS thNum,
                                               -Isnull(SUM(Isnull(S_SE_SD_SalesValue, 0)), 0)                 AS thje,
                                               0                                                              AS xsje,
                                               -Isnull(SUM(Isnull(S_SE_SD_UnitPrice * S_SE_SD_Number, 0)), 0) AS bhsje,
                                               B_GI_RetailPrice                                               AS RetailPrice
                                        FROM   S_SE_SalesBasic
                                               INNER JOIN S_SE_SalesDetail
                                                 ON S_SE_SB_SalesID = S_SE_SD_SalesID
                                               LEFT JOIN B_GoodsInfo
                                                 ON S_SE_SD_SalesItemID = B_GI_GoodsID
                                               LEFT JOIN B_Brand
                                                 ON B_BD_ID = B_GI_BrandID
                                                    AND B_GI_SupplierID = B_BD_SupplierID
                                               LEFT JOIN B_Supplier
                                                 ON B_GI_SupplierID = B_SP_ID
                                        WHERE  S_SE_SB_ValueFlag = '1'
                                               AND S_SE_SB_WithdrawFlag = '1'
                                               AND ( ( Isnull('${shopCode}', '') <> ''
                                                       AND S_SE_SB_ShopCode IN (SELECT departmentID
                                                                                FROM   #salesDepartments) )
                                                      OR Isnull('${shopCode}', '') = '' )
                                               AND ( ( Isnull('${bgnDate}', '') <> ''
                                                       AND CONVERT(VARCHAR(10), S_SE_SB_WithdrawDate, 120) >= CONVERT(VARCHAR(10), Getdate(), 23) )
                                                      OR Isnull('${bgnDate}', '') = '' )
                                               AND ( ( Isnull('${endDate}', '') <> ''
                                                       AND CONVERT(VARCHAR(10), S_SE_SB_WithdrawDate, 120) <= CONVERT(VARCHAR(10), Getdate(), 23) )
                                                      OR Isnull('${endDate}', '') = '' )
                                               AND ( ( Isnull('${goodsCategoryID}', '') <> ''
                                                       AND B_GI_GoodsCategoryID = Isnull('${goodsCategoryID}', '') )
                                                      OR Isnull('${goodsCategoryID}', '') = '' )
                                               AND ( ( Isnull('${supplierID}', '') <> ''
                                                       AND B_GI_SupplierID = Isnull('${supplierID}', '') )
                                                      OR Isnull('${supplierID}', '') = '' )
                                               AND ( ( Isnull('${bandID}', '') <> ''
                                                       AND B_GI_BrandID = Isnull('${bandID}', '') )
                                                      OR Isnull('${bandID}', '') = '' )
                                               AND ( ( Isnull('${goodsID}', '') <> ''
                                                       AND S_SE_SD_SalesItemID LIKE '%' + Isnull('${goodsID}', '') + '%' )
                                                      OR Isnull('${goodsID}', '') = '' )
                                               AND ( ( Isnull('${goodsName}', '') <> ''
                                                       AND B_GI_ViewGoodsName LIKE '%' + Isnull('${goodsName}', '') + '%' )
                                                      OR Isnull('${goodsName}', '') = '' )
                                               AND ( ( '${bgispecjj}' <> ''
                                                       AND B_GoodsInfo.B_GI_Spec = '${bgispecjj}' )
                                                      OR ( '${bgispecjj}' = '' ) ) --型号
                                               AND ( ( '${bgicolorjj}' <> ''
                                                       AND B_GoodsInfo.B_GI_Color = '${bgicolorjj}' )
                                                      OR ( '${bgicolorjj}' = '' ) ) --色号
                                               AND ( ( '${bgiframesizejj}' <> ''
                                                       AND B_GoodsInfo.B_GI_FrameSize = '${bgiframesizejj}' )
                                                      OR ( '${bgiframesizejj}' = '' ) ) --尺寸
                                               AND ( ( '${bgieyeglassmaterialtypejp}' <> ''
                                                       AND B_GoodsInfo.B_GI_EyeGlassMaterialType = '${bgieyeglassmaterialtypejp}' )
                                                      OR ( '${bgieyeglassmaterialtypejp}' = '' ) ) --镜片材料分类
                                               AND ( ( '${bgirefractivejp}' <> ''
                                                       AND B_GoodsInfo.B_GI_Refractive = '${bgirefractivejp}' )
                                                      OR ( '${bgirefractivejp}' = '' ) ) --镜片折射率
                                               AND ( ( '${bgiismutiluminosityjp}' <> ''
                                                       AND B_GoodsInfo.B_GI_isMutiLuminosity = '${bgiismutiluminosityjp}' )
                                                      OR ( '${bgiismutiluminosityjp}' = '' ) ) --镜片光度分类
                                               AND ( ( '${minSphjp}' <> ''
                                                       AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                      OR ( '${minSphjp}' = '' ) ) --镜片球镜范围
                                               AND ( ( '${maxSphjp}' <> ''
                                                       AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                      OR ( '${maxSphjp}' = '' ) ) --镜片球镜范围
                                               AND ( ( '${minCyljp}' <> ''
                                                       AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                      OR ( '${minCyljp}' = '' ) ) --镜片柱镜范围
                                               AND ( ( '${maxCyljp}' <> ''
                                                       AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                      OR ( '${maxCyljp}' = '' ) ) --镜片柱镜范围
                                               AND ( ( '${bgiusetypeyj}' <> ''
                                                       AND B_GoodsInfo.B_GI_UseType = '${bgiusetypeyj}' )
                                                      OR ( '${bgiusetypeyj}' = '' ) ) --隐形使用类型
                                               AND ( ( '${bgistealthclassyj}' <> ''
                                                       AND B_GoodsInfo.B_GI_StealthClass = '${bgistealthclassyj}' )
                                                      OR ( '${bgistealthclassyj}' = '' ) ) --抛弃型分类
                                               AND ( ( '${minSphyj}' <> ''
                                                       AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphjp}' AS FLOAT) )
                                                      OR ( '${minSphyj}' = '' ) ) --隐形球镜范围
                                               AND ( ( '${maxSphyj}' <> ''
                                                       AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphjp}' AS FLOAT) )
                                                      OR ( '${maxSphyj}' = '' ) ) --隐形球镜范围
                                               AND ( ( '${minCylyj}' <> ''
                                                       AND B_GoodsInfo.B_GI_Cyl >= CAST('${minCyljp}' AS FLOAT) )
                                                      OR ( '${minCylyj}' = '' ) ) --隐形柱镜范围
                                               AND ( ( '${maxCylyj}' <> ''
                                                       AND B_GoodsInfo.B_GI_Cyl <= CAST('${maxCyljp}' AS FLOAT) )
                                                      OR ( '${maxCylyj}' = '' ) ) --隐形柱镜范围
                                               AND ( ( '${minSphlh}' <> ''
                                                       AND B_GoodsInfo.B_GI_Sph >= CAST('${minSphlh}' AS FLOAT) )
                                                      OR ( '${minSphlh}' = '' ) ) --老花球镜范围
                                               AND ( ( '${maxSphlh}' <> ''
                                                       AND B_GoodsInfo.B_GI_Sph <= CAST('${maxSphlh}' AS FLOAT) )
                                                      OR ( '${maxSphlh}' = '' ) ) --老花球镜范围
                                               AND ( ( '${bgiothergoodsbigclass}' <> ''
                                                       AND B_GoodsInfo.B_GI_OtherGoodsBigClass = '${bgiothergoodsbigclass}' )
                                                      OR ( '${bgiothergoodsbigclass}' = '' ) ) --其他大类
                                               AND ( ( '${bgiothergoodssmallclass}' <> ''
                                                       AND B_GoodsInfo.B_GI_OtherGoodsSmallClass = '${bgiothergoodssmallclass}' )
                                                      OR ( '${bgiothergoodssmallclass}' = '' ) ) --其他小类
                                               AND ( ( '${bgnretailamount}' <> ''
                                                       AND S_SE_SD_Sprice >= CAST('${bgnretailamount}' AS FLOAT) )
                                                      OR ( '${bgnretailamount}' = '' ) )
                                               AND ( ( '${endretailamount}' <> ''
                                                       AND S_SE_SD_Sprice <= CAST('${endretailamount}' AS FLOAT) )
                                                      OR ( '${endretailamount}' = '' ) )
                                        GROUP  BY S_SE_SD_SalesItemID,
                                                  B_GI_ViewGoodsName,
                                                  B_BD_ID,
                                                  S_SE_SD_CommoditiesFlag,
                                                  S_SE_SB_ShopCode,
                                                  B_SP_ID,
                                                  B_SP_SupplierName,
                                                  B_BD_brandName,
                                                  B_GI_RetailPrice)TEMP
                                GROUP  BY CategoryID,
                                          ShopCode,
                                          SupplierID,
                                          SupplierName,
                                          BrandID,
                                          brandName,
                                          goodsid,
                                          goodsname,
                                          RetailPrice)TEMP
                               LEFT JOIN B_GoodsCategory
                                 ON CategoryID = B_GC_ID
                               LEFT JOIN B_Supplier
                                 ON B_SP_ID = SupplierID
                               LEFT JOIN B_Brand
                                 ON B_BD_SupplierID = SupplierID
                                    AND B_BD_ID = brandid
                        GROUP  BY CategoryID,
                                  B_GC_GoodsCategoryName,
                                  SupplierID,
                                  B_SP_SupplierName,
                                  BrandID,
                                  B_BD_brandName,
                                  temp.RetailPrice)t2
               ON t1.SupplierID = t2.SupplierID
                  AND t1.CategoryID = t2.CategoryID
                  AND t1.brandid = t2.brandid
                  AND t1.goodsid = t2.goodsid
				  AND t1.RetailPrice = t2.RetailPrice
             LEFT JOIN B_Brand
               ON B_BD_SupplierID = t1.SupplierID
                  AND B_BD_ID = t1.brandid
             LEFT JOIN B_FrameMaterial
               ON B_FM_ID = B_BD_FrameMaterialType
			left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) < '${bgnDate}'
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_qc on t1.goodsid = stock_qc.GoodsID and stock_qc.deptID = t1.ShopCode and stock_qc.RetailPrice = t1.RetailPrice
					left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) <= '${endDate}'
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_qm on t1.goodsid = stock_qm.GoodsID and stock_qm.deptID = t1.ShopCode and stock_qm.RetailPrice = t1.RetailPrice
					left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) >= '${bgnDate}'
						  and convert(varchar(10),C_SH_SL_WarehousingDate,23) <= '${endDate}'
						  and (C_SH_SL_ChangeID like 'PIN%' or C_SH_SL_ChangeID like 'ALL%')
						  and C_SH_SL_GoodsQuantity > 0
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_cg on t1.goodsid = stock_cg.GoodsID and stock_cg.deptID = t1.ShopCode and stock_cg.RetailPrice = t1.RetailPrice
					left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						-sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) >= '${bgnDate}'
						  and convert(varchar(10),C_SH_SL_WarehousingDate,23) <= '${endDate}'
						  and (C_SH_SL_ChangeID like 'pout%' or C_SH_SL_ChangeID like 'ALL%')
						  and C_SH_SL_GoodsQuantity < 0
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_th on t1.goodsid = stock_th.GoodsID and stock_th.deptID = t1.ShopCode and stock_th.RetailPrice = t1.RetailPrice
					left join (
						select 
						B_WH_deptID					as deptID,
						B_GI_RetailPrice			as RetailPrice,
						substring(B_GI_GoodsID,1,7) as GoodsID,
						sum(isnull(C_SH_SL_GoodsQuantity,0))	as GoodsQuantity
						from C_SH_StorageLog
						left join dbo.B_Warehouse on B_WH_ID = C_SH_SL_StockId
						left join B_GoodsInfo on C_SH_SL_GoodsId = B_GI_GoodsID
						where convert(varchar(10),C_SH_SL_WarehousingDate,23) >= '${bgnDate}'
						  and convert(varchar(10),C_SH_SL_WarehousingDate,23) <= '${endDate}'
						  and (C_SH_SL_ChangeID like 'sco%' or C_SH_SL_ChangeID like 'sci%')
						group by 
						B_WH_deptID,
						B_GI_RetailPrice,
						substring(B_GI_GoodsID,1,7)
					) stock_yk on t1.goodsid = stock_yk.GoodsID and stock_yk.deptID = t1.ShopCode and stock_yk.RetailPrice = t1.RetailPrice
        
  END

DROP TABLE #salesDepartments ]]></Query>
</TableData>
<TableData name="ds4" class="com.fr.data.impl.DBTableData">
<Parameters>
<Parameter>
<Attributes name="shopCode"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="bgnDate"/>
<O>
<![CDATA[]]></O>
</Parameter>
<Parameter>
<Attributes name="endDate"/>
<O>
<![CDATA[]]></O>
</Parameter>
</Parameters>
<Attributes maxMemRowCount="-1"/>
<Connection class="com.fr.data.impl.NameDatabaseConnection">
<DatabaseName>
<![CDATA[datasource]]></DatabaseName>
</Connection>
<Query>
<![CDATA[select departmentID into #salesDepartments from sales_createShopCodeTab('${shopCode}')

select sum(xiaoshou) as xiaoshou from (
select isnull(sum(isnull(S_SE_SB_SalesValue,0)),0) as xiaoshou
  from S_SE_SalesBasic
  where S_SE_SB_ValueFlag='1' 
       and ((isnull('${shopCode}','')<>'' and S_SE_SB_ShopCode in (select departmentID from #salesDepartments)) or isnull('${shopCode}','')='')
       and ((isnull('${bgnDate}','')<>'' and convert(varchar(10),S_SE_SB_PosDatetime,120)>='${bgnDate}') or isnull('${bgnDate}','')='')
       and ((isnull('${endDate}','')<>'' and convert(varchar(10),S_SE_SB_PosDatetime,120)<='${endDate}') or isnull('${endDate}','')='')

union all
select -isnull(sum(isnull(S_SE_SB_SalesValue,0)),0) as xiaoshou
  from S_SE_SalesBasic
  where S_SE_SB_ValueFlag='1' and S_SE_SB_WithdrawFlag='1'
       and ((isnull('${shopCode}','')<>'' and S_SE_SB_ShopCode in (select departmentID from #salesDepartments)) or isnull('${shopCode}','')='')
       and ((isnull('${bgnDate}','')<>'' and convert(varchar(10),S_SE_SB_WithdrawDate,120)>='${bgnDate}') or isnull('${bgnDate}','')='')
       and ((isnull('${endDate}','')<>'' and convert(varchar(10),S_SE_SB_WithdrawDate,120)<='${endDate}') or isnull('${endDate}','')='')

)temp

drop table #salesDepartments]]></Query>
</TableData>
<TableData name="ds5" class="com.fr.data.impl.DBTableData">
<Parameters>
<Parameter>
<Attributes name="supplierID"/>
<O>
<![CDATA[]]></O>
</Parameter>
</Parameters>
<Attributes maxMemRowCount="-1"/>
<Connection class="com.fr.data.impl.NameDatabaseConnection">
<DatabaseName>
<![CDATA[datasource]]></DatabaseName>
</Connection>
<Query>
<![CDATA[select top 1 B_SP_SupplierName from B_Supplier where B_SP_ID = '${supplierID}']]></Query>
</TableData>
<TableData name="ds6" class="com.fr.data.impl.DBTableData">
<Parameters>
<Parameter>
<Attributes name="goodsCategoryID"/>
<O>
<![CDATA[]]></O>
</Parameter>
</Parameters>
<Attributes maxMemRowCount="-1"/>
<Connection class="com.fr.data.impl.NameDatabaseConnection">
<DatabaseName>
<![CDATA[datasource]]></DatabaseName>
</Connection>
<Query>
<![CDATA[select B_GC_GoodsCategoryName
 from B_GoodsCategory
 where ((isnull('${goodsCategoryID}','')='' and B_GC_ID in (select B_GC_ID  from B_GoodsCategory)) or (isnull('${goodsCategoryID}','')<>'' and B_GC_ID='${goodsCategoryID}'))]]></Query>
</TableData>
</TableDataMap>
<ReportWebAttr>
<WebPageContent>
<ToolBars>
<ToolBarManager>
<Location>
<Embed position="1"/>
</Location>
<ToolBar>
<Widget class="com.fr.report.web.ui.impl.page.First">
<WidgetAttr/>
<Text>
<![CDATA[${i18n('ReportServerP-First')}]]></Text>
<IconName>
<![CDATA[first]]></IconName>
</Widget>
<Widget class="com.fr.report.web.ui.impl.page.Previous">
<WidgetAttr/>
<Text>
<![CDATA[${i18n('ReportServerP-Previous')}]]></Text>
<IconName>
<![CDATA[previous]]></IconName>
</Widget>
<Widget class="com.fr.report.web.ui.impl.page.PageNavi">
<WidgetAttr/>
</Widget>
<Widget class="com.fr.report.web.ui.impl.page.Next">
<WidgetAttr/>
<Text>
<![CDATA[${i18n('ReportServerP-Next')}]]></Text>
<IconName>
<![CDATA[next]]></IconName>
</Widget>
<Widget class="com.fr.report.web.ui.impl.page.Last">
<WidgetAttr/>
<Text>
<![CDATA[${i18n('ReportServerP-Last')}]]></Text>
<IconName>
<![CDATA[last]]></IconName>
</Widget>
<Widget class="com.fr.report.web.ui.impl.FlashPrint">
<WidgetAttr/>
<Text>
<![CDATA[${i18n('Utils-Print[Client]A')}]]></Text>
<IconName>
<![CDATA[flashprint]]></IconName>
</Widget>
<Widget class="com.fr.report.web.ui.impl.Export">
<WidgetAttr/>
<Text>
<![CDATA[${i18n('Export')}]]></Text>
<IconName>
<![CDATA[export]]></IconName>
<Buttons pdf="true" excelP="true" excelO="true" excelS="true" word="true" image="true" html="true"/>
</Widget>
<Widget class="com.fr.report.web.ui.impl.page.SetPrinterOffset">
<WidgetAttr/>
<Text>
<![CDATA[${i18n('SetPrinterOffset')}]]></Text>
<IconName>
<![CDATA[setprinteroffset]]></IconName>
</Widget>
</ToolBar>
</ToolBarManager>
</ToolBars>
<WebPage isPage="false" isShowAsImage="false" isAutoScale="false" isTDHeavy="false"/>
</WebPageContent>
</ReportWebAttr>
<ReportExportAttr>
<ExcelExportAttr hideColumn="false" hideRow="false"/>
<PDFExportAttr/>
<HTMLExportAttr/>
</ReportExportAttr>
<Report class="com.fr.report.WorkSheet" name="sheet1">
<ReportPageAttr>
<HR F="0" T="7"/>
<FR F="9" T="10"/>
<HC F="0" T="3"/>
<FC/>
<UPFCR COLUMN="true" ROW="true"/>
</ReportPageAttr>
<RowHeight defaultValue="723900">
<![CDATA[914400,1333500,914400,914400,914400,914400,304800,571500,876300,800100,914400,723900]]></RowHeight>
<ColumnWidth defaultValue="2743200">
<![CDATA[576000,0,2819400,5981700,2552700,2057400,2781300,2476500,0,2667000,2628900,2448000,2448000,2448000,3600000,3600000,2628900,3810000,2743200]]></ColumnWidth>
<CellElementList>
<C c="3" r="0">
<Expand dir="0"/>
</C>
<C c="4" r="0" cs="14" s="0">
<O t="DSColumn">
<Attributes dsName="ds1" columnName="F_CN_ReportShowName"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<Expand dir="0"/>
</C>
<C c="4" r="1" cs="14" s="1">
<O>
<![CDATA[框镜商品销售分析表（镜架）]]></O>
<Expand/>
</C>
<C c="2" r="2" s="2">
<O>
<![CDATA[查询日期：]]></O>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[条件属性1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[$isShow = 1]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.RowHeightHighlightAction"/>
</Highlight>
</HighlightList>
<Expand/>
</C>
<C c="3" r="2" cs="13" s="3">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=$bgnDate + " 至 " + $endDate]]></Attributes>
</O>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[条件属性1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[$isShow = 1]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.RowHeightHighlightAction"/>
</Highlight>
</HighlightList>
<Expand/>
</C>
<C c="2" r="3" s="3">
<O>
<![CDATA[制造商：]]></O>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[条件属性1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[$isShow = 1]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.RowHeightHighlightAction"/>
</Highlight>
</HighlightList>
<Expand/>
</C>
<C c="3" r="3" cs="13" s="3">
<O t="DSColumn">
<Attributes dsName="ds5" columnName="B_SP_SupplierName"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[条件属性1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[$isShow = 1]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.RowHeightHighlightAction"/>
</Highlight>
</HighlightList>
<Expand dir="0"/>
</C>
<C c="2" r="4" s="3">
<O>
<![CDATA[销售门店：]]></O>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[条件属性1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[$isShow = 1]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.RowHeightHighlightAction"/>
</Highlight>
</HighlightList>
<Expand/>
</C>
<C c="3" r="4" cs="13" s="3">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=if($departmentNames = '','所有门店',$departmentNames)]]></Attributes>
</O>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[条件属性1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[$isShow = 1]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.RowHeightHighlightAction"/>
</Highlight>
</HighlightList>
<Expand/>
</C>
<C c="2" r="5" s="3">
<O>
<![CDATA[商品类别：]]></O>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[条件属性1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[$isShow = 1]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.RowHeightHighlightAction"/>
</Highlight>
</HighlightList>
<Expand/>
</C>
<C c="3" r="5" cs="13" s="2">
<O t="DSColumn">
<Attributes dsName="ds6" columnName="B_GC_GoodsCategoryName"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Result>
<![CDATA[$$$]]></Result>
<Parameters/>
</O>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[条件属性1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[$isShow = 1]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.RowHeightHighlightAction"/>
</Highlight>
</HighlightList>
<Expand/>
</C>
<C c="2" r="6" rs="2" s="4">
<O>
<![CDATA[品种代码]]></O>
<Expand/>
</C>
<C c="3" r="6" rs="2" s="4">
<O>
<![CDATA[品种名称]]></O>
<Expand/>
</C>
<C c="4" r="6" rs="2" s="4">
<O>
<![CDATA[产品风格]]></O>
<Expand/>
</C>
<C c="5" r="6" rs="2" s="4">
<O>
<![CDATA[零售价]]></O>
<Expand/>
</C>
<C c="6" r="6" rs="2" s="4">
<O>
<![CDATA[合作方式]]></O>
<Expand/>
</C>
<C c="7" r="6" rs="2" s="4">
<O>
<![CDATA[毛利率]]></O>
<CellGUIAttr printBackground="false" showAsDefault="true"/>
<CellPageAttr/>
<CellInsertPolicy/>
<Expand/>
</C>
<C c="8" r="6" s="4">
<Expand/>
</C>
<C c="9" r="6" rs="2" s="4">
<O>
<![CDATA[期初库存]]></O>
<CellGUIAttr printBackground="false" showAsDefault="true"/>
<CellPageAttr/>
<CellInsertPolicy/>
<Expand/>
</C>
<C c="10" r="6" rs="2" s="4">
<O>
<![CDATA[期末库存]]></O>
<CellGUIAttr printBackground="false" showAsDefault="true"/>
<CellPageAttr/>
<CellInsertPolicy/>
<Expand/>
</C>
<C c="11" r="6" rs="2" s="4">
<O>
<![CDATA[补货]]></O>
<CellGUIAttr printBackground="false" showAsDefault="true"/>
<CellPageAttr/>
<CellInsertPolicy/>
<Expand/>
</C>
<C c="12" r="6" rs="2" s="4">
<O>
<![CDATA[退货]]></O>
<CellGUIAttr printBackground="false" showAsDefault="true"/>
<CellPageAttr/>
<CellInsertPolicy/>
<Expand/>
</C>
<C c="13" r="6" rs="2" s="4">
<O>
<![CDATA[盈亏]]></O>
<CellGUIAttr printBackground="false" showAsDefault="true"/>
<CellPageAttr/>
<CellInsertPolicy/>
<Expand/>
</C>
<C c="14" r="6" rs="2" s="4">
<O>
<![CDATA[成本]]></O>
<CellGUIAttr printBackground="false" showAsDefault="true"/>
<CellPageAttr/>
<CellInsertPolicy/>
<Expand/>
</C>
<C c="15" r="6" rs="2" s="4">
<O>
<![CDATA[成交]]></O>
<CellGUIAttr printBackground="false" showAsDefault="true"/>
<CellPageAttr/>
<CellInsertPolicy/>
<Expand/>
</C>
<C c="16" r="6" rs="2" s="4">
<O>
<![CDATA[实售数量]]></O>
<CellGUIAttr printBackground="false" showAsDefault="true"/>
<CellPageAttr/>
<CellInsertPolicy/>
<Expand/>
</C>
<C c="17" r="6" rs="2" s="4">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="ShopCodeName"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[条件属性1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[$shopcol != "1"]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.ColWidthHighlightAction"/>
</Highlight>
</HighlightList>
<Expand dir="1"/>
</C>
<C c="8" r="7" s="4">
<Expand/>
</C>
<C c="0" r="8">
<Expand order="2"/>
</C>
<C c="1" r="8">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="brandid"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<Expand dir="0" order="2">
<SortFormula>
<![CDATA[SWITCH($order, "1", -TODOUBLE(I9), "2", TODOUBLE(I9), "3", -TODOUBLE(J9), "4", TODOUBLE(J9), "5", -TODOUBLE(K9), "6", TODOUBLE(K9), "7", -TODOUBLE(L9), "8", TODOUBLE(L9), "9", -TODOUBLE(M9), "10", TODOUBLE(M9), "11", -TODOUBLE(N9), "12", TODOUBLE(N9), "13", -TODOUBLE(O9), "14", TODOUBLE(O9), "15", -TODOUBLE(P9), "16", TODOUBLE(P9), "17", -TODOUBLE(Q9), "18", TODOUBLE(Q9))]]></SortFormula>
</Expand>
</C>
<C c="2" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="goodsid"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[条件属性1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[(row() - 8) % 20 = 0]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.PageHighlightAction">
<P i="1"/>
</HighlightAction>
</Highlight>
</HighlightList>
<Expand dir="0" order="2"/>
</C>
<C c="3" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="goodsname"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<HighlightList>
<Highlight class="com.fr.report.cell.cellattr.highlight.DefaultHighlight">
<Name>
<![CDATA[条件属性1]]></Name>
<Condition class="com.fr.data.condition.FormulaCondition">
<Formula>
<![CDATA[(row() - 8) % 20 = 0]]></Formula>
</Condition>
<HighlightAction class="com.fr.report.cell.cellattr.highlight.PageHighlightAction">
<P i="1"/>
</HighlightAction>
</Highlight>
</HighlightList>
<Expand dir="0" order="2"/>
</C>
<C c="4" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="czname"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<Expand dir="0"/>
</C>
<C c="5" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="RetailPrice"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<Expand dir="0"/>
</C>
<C c="6" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="jstype"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<Expand dir="0"/>
</C>
<C c="7" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="xsmll2"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Result>
<![CDATA[$$$]]></Result>
<Parameters/>
</O>
<Expand dir="0"/>
</C>
<C c="8" r="8" s="6">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=if(P9 = 0, 0, (P9 - O9) / P9)]]></Attributes>
</O>
<Expand/>
</C>
<C c="9" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="GoodsQuantityqc"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.SummaryGrouper">
<FN>
<![CDATA[com.fr.data.util.function.SumFunction]]></FN>
</RG>
<Parameters/>
</O>
<Expand/>
</C>
<C c="10" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="GoodsQuantityqm"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.SummaryGrouper">
<FN>
<![CDATA[com.fr.data.util.function.SumFunction]]></FN>
</RG>
<Parameters/>
</O>
<Expand/>
</C>
<C c="11" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="GoodsQuantitycg"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.SummaryGrouper">
<FN>
<![CDATA[com.fr.data.util.function.SumFunction]]></FN>
</RG>
<Parameters/>
</O>
<Expand/>
</C>
<C c="12" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="GoodsQuantityth"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.SummaryGrouper">
<FN>
<![CDATA[com.fr.data.util.function.SumFunction]]></FN>
</RG>
<Parameters/>
</O>
<Expand/>
</C>
<C c="13" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="GoodsQuantityyk"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.SummaryGrouper">
<FN>
<![CDATA[com.fr.data.util.function.SumFunction]]></FN>
</RG>
<Parameters/>
</O>
<Expand/>
</C>
<C c="14" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="bhsje2"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Result>
<![CDATA[FuncOne($$$)]]></Result>
<Parameters/>
</O>
<Expand dir="0"/>
</C>
<C c="15" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="shje2"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Result>
<![CDATA[FuncOne($$$)]]></Result>
<Parameters/>
</O>
<Expand dir="0"/>
</C>
<C c="16" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="shNum2"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<Expand dir="0"/>
</C>
<C c="17" r="8" s="5">
<O t="DSColumn">
<Attributes dsName="ds3" columnName="shNum"/>
<Complex/>
<RG class="com.fr.report.cell.cellattr.core.group.FunctionGrouper"/>
<Parameters/>
</O>
<Expand dir="0"/>
</C>
<C c="2" r="9" cs="5" s="7">
<O>
<![CDATA[合计：]]></O>
<Expand/>
</C>
<C c="7" r="9" s="4">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=FuncOne(((P10 - O10) / P10) * 100) + "%"]]></Attributes>
</O>
<Expand/>
</C>
<C c="8" r="9" s="4">
<Expand/>
</C>
<C c="9" r="9" s="4">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=sum(J9)]]></Attributes>
</O>
<Expand/>
</C>
<C c="10" r="9" s="4">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=sum(K9)]]></Attributes>
</O>
<Expand/>
</C>
<C c="11" r="9" s="4">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=sum(L9)]]></Attributes>
</O>
<Expand/>
</C>
<C c="12" r="9" s="4">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=sum(M9)]]></Attributes>
</O>
<Expand/>
</C>
<C c="13" r="9" s="4">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=sum(N9)]]></Attributes>
</O>
<Expand/>
</C>
<C c="14" r="9" s="4">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=FuncOne(sum(O9))]]></Attributes>
</O>
<Expand/>
</C>
<C c="15" r="9" s="4">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=FuncOne(sum(P9))]]></Attributes>
</O>
<Expand/>
</C>
<C c="16" r="9" s="4">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=sum(Q9)]]></Attributes>
</O>
<Expand/>
</C>
<C c="17" r="9" s="4">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[=sum(R9)]]></Attributes>
</O>
<Expand/>
</C>
<C c="2" r="10" cs="2" s="2">
<O t="Formula" class="Formula">
<Attributes>
<![CDATA[="打印日期：" + today()]]></Attributes>
</O>
<CellPageAttr/>
<CellInsertPolicy/>
<Expand/>
</C>
<C c="9" r="10">
<Expand/>
</C>
<C c="10" r="10">
<Expand/>
</C>
<C c="11" r="10">
<Expand/>
</C>
<C c="12" r="10">
<Expand/>
</C>
<C c="13" r="10">
<Expand/>
</C>
<C c="14" r="10">
<Expand/>
</C>
<C c="15" r="10">
<Expand/>
</C>
<C c="16" r="10">
<Expand/>
</C>
<C c="17" r="10">
<Expand/>
</C>
</CellElementList>
<ReportAttrSet>
<ReportSettings headerHeight="0" footerHeight="0">
<PaperSetting orientation="1">
<PaperSize width="30240000" height="47520000"/>
</PaperSetting>
</ReportSettings>
<Header reportPageType="0">
<Background name="NullBackground"/>
<LeftList/>
<CenterList/>
<RightList/>
</Header>
<Footer reportPageType="0">
<Background name="NullBackground"/>
<LeftList/>
<CenterList/>
<RightList/>
</Footer>
</ReportAttrSet>
</Report>
<ReportParameterAttr>
<Attributes showWindow="false" delayPlaying="true" windowPosition="1" align="1"/>
<PWTitle>
<![CDATA[参数]]></PWTitle>
<ParameterUI class="com.fr.main.parameter.FormParameterUI">
<Layout class="com.fr.form.ui.container.WAbsoluteLayout">
<WidgetName name="para"/>
<WidgetAttr/>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="label0"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue/>
</InnerWidget>
<BoundsAttr x="92" y="18" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelbgnDate"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bgnDate:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="50" y="25" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bgnDate"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="130" y="25" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelendDate"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[endDate:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="215" y="25" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="endDate"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="295" y="25" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelsupplierID"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[supplierID:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="380" y="25" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="supplierID"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="460" y="25" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelmaxSphyj"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[maxSphyj:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="545" y="25" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="maxSphyj"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="625" y="25" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelminSphjp"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[minSphjp:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="50" y="50" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="minSphjp"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="130" y="50" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelmaxCyljp"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[maxCyljp:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="215" y="50" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="maxCyljp"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="295" y="50" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="Labelendretailamount"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[endretailamount:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="380" y="50" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="endretailamount"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="460" y="50" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="Labelbgistealthclassyj"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bgistealthclassyj:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="545" y="50" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bgistealthclassyj"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="625" y="50" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="Labelbgiothergoodsbigclass"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bgiothergoodsbigclass:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="50" y="75" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bgiothergoodsbigclass"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="130" y="75" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelminCylyj"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[minCylyj:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="215" y="75" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="minCylyj"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="295" y="75" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="Labelbgiothergoodssmallclass"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bgiothergoodssmallclass:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="380" y="75" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bgiothergoodssmallclass"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="460" y="75" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="Labelbgispecjj"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bgispecjj:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="545" y="75" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bgispecjj"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="625" y="75" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="Labelbgnretailamount"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bgnretailamount:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="50" y="100" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bgnretailamount"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="130" y="100" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelmaxCylyj"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[maxCylyj:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="215" y="100" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="maxCylyj"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="295" y="100" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelminSphlh"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[minSphlh:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="380" y="100" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="minSphlh"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="460" y="100" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="Labelbgiismutiluminosityjp"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bgiismutiluminosityjp:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="545" y="100" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bgiismutiluminosityjp"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="625" y="100" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelminSphyj"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[minSphyj:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="50" y="125" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="minSphyj"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="130" y="125" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="Labelbgiusetypeyj"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bgiusetypeyj:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="215" y="125" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bgiusetypeyj"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="295" y="125" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelbandID"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bandID:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="380" y="125" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bandID"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="460" y="125" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="Labelbgieyeglassmaterialtypejp"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bgieyeglassmaterialtypejp:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="545" y="125" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bgieyeglassmaterialtypejp"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="625" y="125" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="Labelbgiframesizejj"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bgiframesizejj:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="50" y="150" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bgiframesizejj"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="130" y="150" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelmaxSphjp"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[maxSphjp:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="215" y="150" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="maxSphjp"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="295" y="150" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelmaxSphlh"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[maxSphlh:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="380" y="150" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="maxSphlh"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="460" y="150" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelgoodsCategoryID"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[goodsCategoryID:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="545" y="150" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="goodsCategoryID"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="625" y="150" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelshopCode"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[shopCode:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="50" y="175" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="shopCode"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="130" y="175" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelminCyljp"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[minCyljp:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="215" y="175" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="minCyljp"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="295" y="175" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="Labelbgirefractivejp"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bgirefractivejp:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="380" y="175" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bgirefractivejp"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="460" y="175" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelgoodsID"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[goodsID:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="545" y="175" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="goodsID"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="625" y="175" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="LabelgoodsName"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[goodsName:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="50" y="200" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="goodsName"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="130" y="200" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.Label">
<WidgetName name="Labelbgicolorjj"/>
<WidgetAttr/>
<LabelAttr verticalcenter="true" textalign="0" autoline="true"/>
<FRFont name="SimSun" style="0" size="72"/>
<widgetValue>
<O>
<![CDATA[bgicolorjj:]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="215" y="200" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.form.ui.EditorHolder">
<WidgetName name="bgicolorjj"/>
<WidgetAttr/>
<widgetValue>
<O>
<![CDATA[]]></O>
</widgetValue>
</InnerWidget>
<BoundsAttr x="295" y="200" width="80" height="21"/>
</Widget>
<Widget class="com.fr.form.ui.container.WAbsoluteLayout$BoundsWidget">
<InnerWidget class="com.fr.report.web.ui.impl.form.FormSubmitButton">
<WidgetName name="Search"/>
<WidgetAttr/>
<Text>
<![CDATA[查询]]></Text>
<Hotkeys>
<![CDATA[enter]]></Hotkeys>
</InnerWidget>
<BoundsAttr x="560" y="200" width="80" height="21"/>
</Widget>
<LCAttr vgap="0" hgap="0"/>
</Layout>
<DesignAttr width="800" height="240"/>
</ParameterUI>
</ReportParameterAttr>
<StyleList>
<Style imageLayout="1">
<FRFont name="黑体" style="1" size="120"/>
<Background name="NullBackground"/>
<Border/>
</Style>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="黑体" style="1" size="136"/>
<Background name="NullBackground"/>
<Border/>
</Style>
<Style horizontal_alignment="2" imageLayout="1">
<FRFont name="SimSun" style="1" size="72"/>
<Background name="NullBackground"/>
<Border/>
</Style>
<Style imageLayout="1">
<FRFont name="SimSun" style="1" size="72"/>
<Background name="NullBackground"/>
<Border/>
</Style>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="SimSun" style="1" size="80"/>
<Background name="ImageBackground" specifiedImageWidth="-1.0" specifiedImageHeight="-1.0" layout="2">
<IM>
<![CDATA[!CmF*pPD^A7h#eD$31&+%7s)Y;?-[sec5[M/I2CX!!$<S!i#_q#S'Eo5u`*_mG%GX'B^5<nG
T1>S]AkWA/OptX1J(-,.4sf2$qX!X%#$T,.FVfGaA<5SR#khcTa:`5+Q8,:$m#MZ0t%'$lS+(
p(Q;p0OtHJp^*H@PHaPn8X$*lE9=sa,%X1A@L%TBQkbF]A>h=ntY4O<We9$j>'&#NuOAfa]A1S
sc0qUjX:JIQR]A4qC?,Mqp#mgVB8!nI\<P*_:6]A(+/&E]AI8??kKr34eC]A:6#4nG0'o?86Ud+o
n0ImM9Agh,H6l^gQ!Q-8##NId^(U<k;e#]A[/:<l\=QT,,K;*sO/+!-Hgg#lQ%)7k,R+.R6af
n^B,Yi<q5#:lJ6,FPb;<\M==9?F43??^:osrM>/j,3L/.6ho^ZVMn=Q9KuisoK_9WF<<A'5R
NNneqS0fP3Bnr!778=T<t<&p6=4!;?hqK-dDMXW<L9aFIs2X#e<$VF_6@$pnSW:XU,!S?X(+
o*p5Si8p<n=([!k_`grTDg>[[R7,F6#lq[+PAF^Wg>g7:J;?3B)Rn9;*c(!2SNAP?Db;M-E9
!Q\]A8"b<Yg4hf(MhsAinN'.J`Iq8[!e=DrCU>j0`?]AeLg6S25P*8,:GbK"Am77uGP3THNfRg
C\nNolR"9@8Gd%!+&\=*t4;=Sg-Cr_EV>b5RLLTH/L0.GdR.$fNsM<?FGCsl>dJDQ6)c59X,
W-Ac:[&0onYWM_-JfWO]Ah5#-;=YM/?As@.mb#]A,q!+nOr$DKH!H*&8s:Pf$D't`tP4L6,E`s
]AA`qNm9_;5"T\)P`!ZL]A@Fd]A,]Aob`RN(NhM@&TUi8Dl=u5^h/V81cq0G@c-40rV1a&;3;Rd8
O!'k`;d<p@9X[i.U<&,f>)_&2n`sB-4b#MDY6BqqW<#=Z]A_J3p]A"9@9.7JZNe[8+nS>gcen9
<rLq,QGU^6T6g,)3kVMV'[hF7e/F1_V'_N!4o4j#h:*kS5p46fmrYUKQ7;Jr"q^glcfl0i>a
%C8%@iW;ABcD5^,(or_,jCX49O)C5<8Om+7!65M$gY3A!06PBAUZ.O(Go9,1kI!+s-JOF/N'
SrS\@+qsV]Ad?'_LB-r(AnWkAD3As_RPu!/=D8jVY!!'>L-rgD(MPs>h/tNR]Ap#q&8/!cb72Q
,U?Uo:\9D:+2jGUsu%LI;-hh6DK08lnEZ#cT[iYmsX#;bAKj9dsp(>c`mK(*/+J,67e3'o1a
G^^c'Pnt::U/6!k5VPICQi2*5S*M#/-((USfmpPZi^Mj_gJCu&Zl.R3l%L3_clDodkQ]Aau*m
>)o7SW-C1LSY(RiIG;5`\3PW^b#9#-gc]A.4[K'T5gcICb,B'25D`cr6Is/o_]A`_9/FFGnpP]A
JeqZ&m2HcDnq54L.j08#P\&76"u1a%Kt-5a=E8uKPkG9LrZ/<o_g'u(aO!C1k@]Aoj/L?#]AdY
\F=oC3#PaL+EAo_S)!Aa?K-)tIRtolfU@*R%^u.=('&INr&sDuGHo+-b`Ya!2$^h'QeFPibr
#]AuIgtMj\Yp7VgsSsg2dMgfg9h2u!'k`]AG%=q-N`LI?=(XlSq_oo$mpUO&3='I>afTcLDt\4
pCrDM)bY(tV!+s?9%d^ZqoJ/MBd`JY9d9B-*\X!6fr`JTZIcA[KB"9Mj#@$?bSbUX9/-+o%G
?rmgXk:g&e>nVR.Mr%Y5Q/D81WKnkgH><+#)L#TWKiM1E]Aa!8:AgB[$ioL/=a+Jg'mmnhYB6
StEfh:GQu*nQZlStdPM^DQe>hMs*o[V6p3Lq+Kae7eh7[F@hrqrVjIk)r@Xmhk2rA74oe?!F
#k%0g+1nK]AIEX_gZ+:`YALCR4#lr?.Rm#9dm`ar;HCY`HVq-RXm!m$cB=%qni=i\]A0Ui9SM3
)'0,1eg<^\!ZhTKagqQ@i<*ADcgu^,JT$)e+$fo$<a,clm=N`u+R0+JE(h]A8q?KL\QW4#6<S
^mj$EXV`$T8N<@+"2tct`Z/<lnIPlQ'Qi4*hfKM]AA*b*tHUc)q.@NPU6DaQb"@3E86`G0a\:
PP8j^!pKjPO6GJ!*SG#G)`dLO"admk`5q8%gON`d+np/o_\(CVZSr]AhX)6?p5_#M?uCN-L8r
,_@9=rL1-<M.:I^buh=P>I!&+f9bkC#^:,fM#N8?X^46i^o6i7"\+0(;U-\D7.0>5CnC\Mu_
dpJ&1!2-r0_otjdrm_:fgIiU[1<0L`RA`+&1_(Cb>ZF=nn1igHWI<gnJPg$_LB[b7Q&RP1^2
2I>]AcSTErCg4YXbf^B/O$*^R6Mc.cNT]Ar0VaV_8%lGXisYqOmX&m?&56dcjT2@gjt;=.##no
Bp-IiJGS-)'_n!o4HT]A6;oPl8W/-+o%PW*e1`+UN`@HMqkh\bID:utiD\+C1l1FeeZA2TgTN
b$GOr7N1r!4k8Pj-nnRXe2SLjr2/&eM,[B&tUjKTQWGI/"JIbjMn^`*#21FnR@jh!8SM(k$j
"R*+KnKX=5I'@`7(*o:.N:ok0LN3-@#/h2:g5ij'lM?Ul@Ad+u)TIjIRnU4jAICW3)m4D2Qh
Mjb7A5,m6Qb*nc@7+HX@@V^^::N?H.40@XZ*-'Md8QID"T4/%m#=!(q6;D^P/^ccb2p<%`(t
jYKp+-FK]A'I1R:.B3#MtT!ZcV!&!ToUc(b2iC`HPCeTbp^`Jz8OZBBY!QNJ~
]]></IM>
</Background>
<Border>
<Top style="1"/>
<Bottom style="1"/>
<Left style="1"/>
<Right style="1"/>
</Border>
</Style>
<Style horizontal_alignment="0" imageLayout="1">
<FRFont name="SimSun" style="0" size="80"/>
<Background name="NullBackground"/>
<Border>
<Top style="1"/>
<Bottom style="1"/>
<Left style="1"/>
<Right style="1"/>
</Border>
</Style>
<Style imageLayout="1">
<FRFont name="SimSun" style="0" size="80"/>
<Background name="NullBackground"/>
<Border>
<Top style="1"/>
<Bottom style="1"/>
<Left style="1"/>
<Right style="1"/>
</Border>
</Style>
<Style horizontal_alignment="4" imageLayout="1">
<FRFont name="SimSun" style="1" size="80"/>
<Background name="ImageBackground" specifiedImageWidth="-1.0" specifiedImageHeight="-1.0" layout="2">
<IM>
<![CDATA[!CmF*pPD^A7h#eD$31&+%7s)Y;?-[sec5[M/I2CX!!$<S!i#_q#S'Eo5u`*_mG%GX'B^5<nG
T1>S]AkWA/OptX1J(-,.4sf2$qX!X%#$T,.FVfGaA<5SR#khcTa:`5+Q8,:$m#MZ0t%'$lS+(
p(Q;p0OtHJp^*H@PHaPn8X$*lE9=sa,%X1A@L%TBQkbF]A>h=ntY4O<We9$j>'&#NuOAfa]A1S
sc0qUjX:JIQR]A4qC?,Mqp#mgVB8!nI\<P*_:6]A(+/&E]AI8??kKr34eC]A:6#4nG0'o?86Ud+o
n0ImM9Agh,H6l^gQ!Q-8##NId^(U<k;e#]A[/:<l\=QT,,K;*sO/+!-Hgg#lQ%)7k,R+.R6af
n^B,Yi<q5#:lJ6,FPb;<\M==9?F43??^:osrM>/j,3L/.6ho^ZVMn=Q9KuisoK_9WF<<A'5R
NNneqS0fP3Bnr!778=T<t<&p6=4!;?hqK-dDMXW<L9aFIs2X#e<$VF_6@$pnSW:XU,!S?X(+
o*p5Si8p<n=([!k_`grTDg>[[R7,F6#lq[+PAF^Wg>g7:J;?3B)Rn9;*c(!2SNAP?Db;M-E9
!Q\]A8"b<Yg4hf(MhsAinN'.J`Iq8[!e=DrCU>j0`?]AeLg6S25P*8,:GbK"Am77uGP3THNfRg
C\nNolR"9@8Gd%!+&\=*t4;=Sg-Cr_EV>b5RLLTH/L0.GdR.$fNsM<?FGCsl>dJDQ6)c59X,
W-Ac:[&0onYWM_-JfWO]Ah5#-;=YM/?As@.mb#]A,q!+nOr$DKH!H*&8s:Pf$D't`tP4L6,E`s
]AA`qNm9_;5"T\)P`!ZL]A@Fd]A,]Aob`RN(NhM@&TUi8Dl=u5^h/V81cq0G@c-40rV1a&;3;Rd8
O!'k`;d<p@9X[i.U<&,f>)_&2n`sB-4b#MDY6BqqW<#=Z]A_J3p]A"9@9.7JZNe[8+nS>gcen9
<rLq,QGU^6T6g,)3kVMV'[hF7e/F1_V'_N!4o4j#h:*kS5p46fmrYUKQ7;Jr"q^glcfl0i>a
%C8%@iW;ABcD5^,(or_,jCX49O)C5<8Om+7!65M$gY3A!06PBAUZ.O(Go9,1kI!+s-JOF/N'
SrS\@+qsV]Ad?'_LB-r(AnWkAD3As_RPu!/=D8jVY!!'>L-rgD(MPs>h/tNR]Ap#q&8/!cb72Q
,U?Uo:\9D:+2jGUsu%LI;-hh6DK08lnEZ#cT[iYmsX#;bAKj9dsp(>c`mK(*/+J,67e3'o1a
G^^c'Pnt::U/6!k5VPICQi2*5S*M#/-((USfmpPZi^Mj_gJCu&Zl.R3l%L3_clDodkQ]Aau*m
>)o7SW-C1LSY(RiIG;5`\3PW^b#9#-gc]A.4[K'T5gcICb,B'25D`cr6Is/o_]A`_9/FFGnpP]A
JeqZ&m2HcDnq54L.j08#P\&76"u1a%Kt-5a=E8uKPkG9LrZ/<o_g'u(aO!C1k@]Aoj/L?#]AdY
\F=oC3#PaL+EAo_S)!Aa?K-)tIRtolfU@*R%^u.=('&INr&sDuGHo+-b`Ya!2$^h'QeFPibr
#]AuIgtMj\Yp7VgsSsg2dMgfg9h2u!'k`]AG%=q-N`LI?=(XlSq_oo$mpUO&3='I>afTcLDt\4
pCrDM)bY(tV!+s?9%d^ZqoJ/MBd`JY9d9B-*\X!6fr`JTZIcA[KB"9Mj#@$?bSbUX9/-+o%G
?rmgXk:g&e>nVR.Mr%Y5Q/D81WKnkgH><+#)L#TWKiM1E]Aa!8:AgB[$ioL/=a+Jg'mmnhYB6
StEfh:GQu*nQZlStdPM^DQe>hMs*o[V6p3Lq+Kae7eh7[F@hrqrVjIk)r@Xmhk2rA74oe?!F
#k%0g+1nK]AIEX_gZ+:`YALCR4#lr?.Rm#9dm`ar;HCY`HVq-RXm!m$cB=%qni=i\]A0Ui9SM3
)'0,1eg<^\!ZhTKagqQ@i<*ADcgu^,JT$)e+$fo$<a,clm=N`u+R0+JE(h]A8q?KL\QW4#6<S
^mj$EXV`$T8N<@+"2tct`Z/<lnIPlQ'Qi4*hfKM]AA*b*tHUc)q.@NPU6DaQb"@3E86`G0a\:
PP8j^!pKjPO6GJ!*SG#G)`dLO"admk`5q8%gON`d+np/o_\(CVZSr]AhX)6?p5_#M?uCN-L8r
,_@9=rL1-<M.:I^buh=P>I!&+f9bkC#^:,fM#N8?X^46i^o6i7"\+0(;U-\D7.0>5CnC\Mu_
dpJ&1!2-r0_otjdrm_:fgIiU[1<0L`RA`+&1_(Cb>ZF=nn1igHWI<gnJPg$_LB[b7Q&RP1^2
2I>]AcSTErCg4YXbf^B/O$*^R6Mc.cNT]Ar0VaV_8%lGXisYqOmX&m?&56dcjT2@gjt;=.##no
Bp-IiJGS-)'_n!o4HT]A6;oPl8W/-+o%PW*e1`+UN`@HMqkh\bID:utiD\+C1l1FeeZA2TgTN
b$GOr7N1r!4k8Pj-nnRXe2SLjr2/&eM,[B&tUjKTQWGI/"JIbjMn^`*#21FnR@jh!8SM(k$j
"R*+KnKX=5I'@`7(*o:.N:ok0LN3-@#/h2:g5ij'lM?Ul@Ad+u)TIjIRnU4jAICW3)m4D2Qh
Mjb7A5,m6Qb*nc@7+HX@@V^^::N?H.40@XZ*-'Md8QID"T4/%m#=!(q6;D^P/^ccb2p<%`(t
jYKp+-FK]A'I1R:.B3#MtT!ZcV!&!ToUc(b2iC`HPCeTbp^`Jz8OZBBY!QNJ~
]]></IM>
</Background>
<Border>
<Top style="1"/>
<Bottom style="1"/>
<Left style="1"/>
<Right style="1"/>
</Border>
</Style>
</StyleList>
</WorkBook>
